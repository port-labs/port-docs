openapi: 3.0.1
info:
  title: Port API
  version: '1.0'
servers:
  - url: https://api.getport.io
  - url: https://api.us.getport.io
components:
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    def-0:
      type: object
      properties:
        combinator:
          enum:
            - and
            - or
        rules:
          type: array
          items:
            anyOf:
              - type: object
                title: Number rule
                properties:
                  property:
                    type: string
                  operator:
                    enum:
                      - '>'
                      - '>='
                      - <
                      - <=
                  value:
                    type:
                      - number
                required:
                  - property
                  - operator
                  - value
                additionalProperties: false
              - type: object
                title: Date rule
                properties:
                  property:
                    type: string
                  operator:
                    enum:
                      - between
                      - notBetween
                      - =
                  value:
                    type: object
                    oneOf:
                      - type: object
                        title: Date range
                        properties:
                          from:
                            type: string
                            format: date-time
                          to:
                            type: string
                            format: date-time
                        required:
                          - from
                          - to
                      - type: object
                        title: Date preset
                        properties:
                          preset:
                            type: string
                            enum:
                              - today
                              - tomorrow
                              - yesterday
                              - lastWeek
                              - last2Weeks
                              - lastMonth
                              - last3Months
                              - last6Months
                              - last12Months
                        required:
                          - preset
                required:
                  - property
                  - operator
                  - value
                additionalProperties: false
              - type: object
                title: String rule
                properties:
                  property:
                    type: string
                  operator:
                    enum:
                      - =
                      - '!='
                      - containsAny
                      - contains
                      - doesNotContain
                      - beginsWith
                      - doesNotBeginWith
                      - endsWith
                      - doesNotEndWith
                      - in
                      - notIn
                  value:
                    anyOf:
                      # - type: 'null'
                      - type: string
                        title: string
                      - type: number
                        title: number
                      - type: boolean
                        title: boolean
                      - type: array
                        title: array
                        items:
                          type: string
                      - type: string
                        title: date-time
                        format: date-time
                additionalProperties: false
                required:
                  - property
                  - operator
                  - value
              - type: object
                title: Empty rule
                properties:
                  operator:
                    enum:
                      - isEmpty
                      - isNotEmpty
                  property:
                    type: string
                required:
                  - operator
                  - property
                additionalProperties: false
              - type: object
                title: Relation rule
                properties:
                  operator:
                    enum:
                      - relatedTo
                  blueprint:
                    type: string
                  value:
                    type: string
                  direction:
                    enum:
                      - upstream
                      - downstream
                  required:
                    type: boolean
                additionalProperties: false
                required:
                  - operator
                  - value
                  - blueprint
              - type: object
                title: Property rule
                properties:
                  propertySchema:
                    type: object
                    properties:
                      type:
                        type: string
                      format:
                        type: string
                    required:
                      - type
                    additionalProperties: false
                  operator:
                    enum:
                      - =
                      - '!='
                  value:
                    anyOf:
                      # - type: 'null'
                      - type: string
                        title: string
                      - type: number
                        title: number
                      - type: boolean
                        title: boolean
                required:
                  - operator
                  - propertySchema
                additionalProperties: false
              - $ref: '#/components/schemas/def-0'
      required:
        - combinator
        - rules
      additionalProperties: false
      title: /schemas/entitiesQuery
    def-1:
      type: object
      properties:
        id:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        type:
          type: string
          enum:
            - dashboard-widget
        layout:
          type: array
          items:
            type: object
            properties:
              height:
                type: number
              columns:
                type: array
                items:
                  type: object
                  properties:
                    size:
                      type: number
                    id:
                      type: string
                  additionalProperties: false
                  required:
                    - size
                    - id
            additionalProperties: false
            required:
              - columns
              - height
        widgets:
          type: array
          items:
            type: object
            anyOf:
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - entity-info
                  title:
                    type: string
                  entity:
                    type: string
                  hiddenQuery:
                    type: array
                    items:
                      type: string
                  blueprint:
                    type: string
                additionalProperties: false
                required:
                  - type
                  - entity
                  - blueprint
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - action-runs-table-widget
                  icon:
                    type: string
                  description:
                    type: string
                    maxLength: 200
                  title:
                    type: string
                  displayMode:
                    type: string
                    enum:
                      - single
                      - widget
                  blueprint:
                    type: string
                  action:
                    type: string
                  tableConfig:
                    type: object
                    properties:
                      filterSettings:
                        type: object
                        properties:
                          filterBy:
                            $ref: '#/components/schemas/def-0'
                        additionalProperties: false
                        required:
                          - filterBy
                      groupSettings:
                        type: object
                        properties:
                          groupBy:
                            type: array
                            items:
                              type: string
                        additionalProperties: false
                        required:
                          - groupBy
                      sortSettings:
                        type: object
                        properties:
                          sortBy:
                            type: array
                            items:
                              type: object
                              properties:
                                property:
                                  type: string
                                order:
                                  enum:
                                    - asc
                                    - desc
                              additionalProperties: false
                              required:
                                - property
                                - order
                        additionalProperties: false
                      propertiesSettings:
                        type: object
                        properties:
                          hidden:
                            type: array
                            items:
                              type: string
                          order:
                            type: array
                            items:
                              type: string
                        additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
                required:
                  - type
                  - action
                  - blueprint
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - table-entities-explorer
                  icon:
                    type: string
                  description:
                    type: string
                    maxLength: 200
                  title:
                    type: string
                  dataset:
                    $ref: '#/components/schemas/def-0'
                  excludedFields:
                    type: array
                    items:
                      type: string
                  displayMode:
                    type: string
                    enum:
                      - tabs
                      - single
                      - widget
                  blueprintConfig:
                    type: object
                    propertyNames:
                      pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                    additionalProperties:
                      type: object
                      properties:
                        filterSettings:
                          type: object
                          properties:
                            filterBy:
                              $ref: '#/components/schemas/def-0'
                          additionalProperties: false
                          required:
                            - filterBy
                        groupSettings:
                          type: object
                          properties:
                            groupBy:
                              type: array
                              items:
                                type: string
                          additionalProperties: false
                          required:
                            - groupBy
                        sortSettings:
                          type: object
                          properties:
                            sortBy:
                              type: array
                              items:
                                type: object
                                properties:
                                  property:
                                    type: string
                                  order:
                                    enum:
                                      - asc
                                      - desc
                                additionalProperties: false
                                required:
                                  - property
                                  - order
                          additionalProperties: false
                        propertiesSettings:
                          type: object
                          properties:
                            hidden:
                              type: array
                              items:
                                type: string
                            order:
                              type: array
                              items:
                                type: string
                          additionalProperties: false
                        tabIndex:
                          type: number
                        hidden:
                          type: boolean
                        title:
                          type: string
                          maxLength: 20
                        description:
                          type: string
                          maxLength: 200
                      additionalProperties: false
                additionalProperties: false
                required:
                  - type
                  - dataset
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - table-entities-explorer-by-direction
                  title:
                    type: string
                  blueprintConfig:
                    type: object
                    propertyNames:
                      pattern: >-
                        ^[A-Za-z0-9@_.:\\/=-]*\$(upstream|downstream|custom)(\$[A-Za-z0-9@_.:\\/=-]+)*$
                    additionalProperties:
                      type: object
                      properties:
                        filterSettings:
                          type: object
                          properties:
                            filterBy:
                              $ref: '#/components/schemas/def-0'
                          additionalProperties: false
                          required:
                            - filterBy
                        groupSettings:
                          type: object
                          properties:
                            groupBy:
                              type: array
                              items:
                                type: string
                          additionalProperties: false
                          required:
                            - groupBy
                        sortSettings:
                          type: object
                          properties:
                            sortBy:
                              type: array
                              items:
                                type: object
                                properties:
                                  property:
                                    type: string
                                  order:
                                    enum:
                                      - asc
                                      - desc
                                additionalProperties: false
                                required:
                                  - property
                                  - order
                          additionalProperties: false
                        propertiesSettings:
                          type: object
                          properties:
                            hidden:
                              type: array
                              items:
                                type: string
                            order:
                              type: array
                              items:
                                type: string
                          additionalProperties: false
                        tabIndex:
                          type: number
                        hidden:
                          type: boolean
                        title:
                          type: string
                          maxLength: 20
                        description:
                          type: string
                          maxLength: 200
                        dataset:
                          $ref: '#/components/schemas/def-0'
                        targetBlueprint:
                          type: string
                        relatedProperty:
                          type: string
                      additionalProperties: false
                additionalProperties: false
                required:
                  - type
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - table-audit-log
                  title:
                    type: string
                  description:
                    type: string
                  query:
                    type: object
                    properties:
                      identifier:
                        type: string
                      entity:
                        type: string
                      blueprint:
                        type: string
                      run_id:
                        type: string
                      webhookId:
                        type: string
                      webhookEventId:
                        type: string
                      origin:
                        type: array
                        items:
                          type: string
                      InstallationId:
                        type: string
                      resources:
                        anyOf:
                          - type: array
                            items:
                              enum:
                                - blueprint
                                - entity
                                - run
                                - webhook
                                - scorecard
                                - action
                          - type: string
                            enum:
                              - blueprint
                              - entity
                              - run
                              - webhook
                              - scorecard
                              - action
                      includes:
                        type: array
                        items:
                          enum:
                            - action
                            - context
                            - diff
                            - identifier
                            - resourceType
                            - status
                            - trigger
                            - additionalData
                            - message
                      from:
                        type: string
                        format: date-time
                        description: 'ISO format IE 2022-04-23T18:25:43.511Z'
                      to:
                        type: string
                        format: date-time
                        description: 'ISO format 2022-04-23T18:25:43.511Z'
                      action:
                        type: string
                      status:
                        type: string
                        enum:
                          - SUCCESS
                          - FAILURE
                      limit:
                        type: number
                    additionalProperties: false
                  tableConfig:
                    type: object
                    properties:
                      filterSettings:
                        type: object
                        properties:
                          filterBy:
                            $ref: '#/components/schemas/def-0'
                        additionalProperties: false
                        required:
                          - filterBy
                      groupSettings:
                        type: object
                        properties:
                          groupBy:
                            type: array
                            items:
                              type: string
                        additionalProperties: false
                        required:
                          - groupBy
                      sortSettings:
                        type: object
                        properties:
                          sortBy:
                            type: array
                            items:
                              type: object
                              properties:
                                property:
                                  type: string
                                order:
                                  enum:
                                    - asc
                                    - desc
                              additionalProperties: false
                              required:
                                - property
                                - order
                        additionalProperties: false
                      propertiesSettings:
                        type: object
                        properties:
                          hidden:
                            type: array
                            items:
                              type: string
                          order:
                            type: array
                            items:
                              type: string
                        additionalProperties: false
                additionalProperties: false
                required:
                  - type
                  - query
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - users-table
                  title:
                    type: string
                  query:
                    type: object
                    properties:
                      team:
                        type: string
                  tableConfig:
                    type: object
                    properties:
                      filterSettings:
                        type: object
                        properties:
                          filterBy:
                            $ref: '#/components/schemas/def-0'
                        additionalProperties: false
                        required:
                          - filterBy
                      groupSettings:
                        type: object
                        properties:
                          groupBy:
                            type: array
                            items:
                              type: string
                        additionalProperties: false
                        required:
                          - groupBy
                      sortSettings:
                        type: object
                        properties:
                          sortBy:
                            type: array
                            items:
                              type: object
                              properties:
                                property:
                                  type: string
                                order:
                                  enum:
                                    - asc
                                    - desc
                              additionalProperties: false
                              required:
                                - property
                                - order
                        additionalProperties: false
                      propertiesSettings:
                        type: object
                        properties:
                          hidden:
                            type: array
                            items:
                              type: string
                          order:
                            type: array
                            items:
                              type: string
                        additionalProperties: false
                additionalProperties: false
                required:
                  - type
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - teams-table
                  title:
                    type: string
                  query:
                    type: object
                    properties:
                      user:
                        type: string
                  tableConfig:
                    type: object
                    properties:
                      filterSettings:
                        type: object
                        properties:
                          filterBy:
                            $ref: '#/components/schemas/def-0'
                        additionalProperties: false
                        required:
                          - filterBy
                      groupSettings:
                        type: object
                        properties:
                          groupBy:
                            type: array
                            items:
                              type: string
                        additionalProperties: false
                        required:
                          - groupBy
                      sortSettings:
                        type: object
                        properties:
                          sortBy:
                            type: array
                            items:
                              type: object
                              properties:
                                property:
                                  type: string
                                order:
                                  enum:
                                    - asc
                                    - desc
                              additionalProperties: false
                              required:
                                - property
                                - order
                        additionalProperties: false
                      propertiesSettings:
                        type: object
                        properties:
                          hidden:
                            type: array
                            items:
                              type: string
                          order:
                            type: array
                            items:
                              type: string
                        additionalProperties: false
                additionalProperties: false
                required:
                  - type
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - runs-table
                  title:
                    type: string
                  query:
                    type: object
                    properties:
                      entity:
                        type: string
                      blueprint:
                        type: string
                      active:
                        type: boolean
                      user_email:
                        type: string
                      limit:
                        type: number
                        minimum: 1
                        maximum: 50
                      external_run_id:
                        type: string
                      version:
                        type: string
                        enum:
                          - v1
                          - v2
                    additionalProperties: false
                  tableConfig:
                    type: object
                    properties:
                      filterSettings:
                        type: object
                        properties:
                          filterBy:
                            $ref: '#/components/schemas/def-0'
                        additionalProperties: false
                        required:
                          - filterBy
                      groupSettings:
                        type: object
                        properties:
                          groupBy:
                            type: array
                            items:
                              type: string
                        additionalProperties: false
                        required:
                          - groupBy
                      sortSettings:
                        type: object
                        properties:
                          sortBy:
                            type: array
                            items:
                              type: object
                              properties:
                                property:
                                  type: string
                                order:
                                  enum:
                                    - asc
                                    - desc
                              additionalProperties: false
                              required:
                                - property
                                - order
                        additionalProperties: false
                      propertiesSettings:
                        type: object
                        properties:
                          hidden:
                            type: array
                            items:
                              type: string
                          order:
                            type: array
                            items:
                              type: string
                        additionalProperties: false
                additionalProperties: false
                required:
                  - type
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - run-info
                  title:
                    type: string
                  runId:
                    type: string
                additionalProperties: false
                required:
                  - type
                  - runId
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - user-info
                  title:
                    type: string
                  user_email:
                    type: string
                additionalProperties: false
                required:
                  - type
                  - user_email
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - graph-entities-explorer
                  title:
                    type: string
                  dataset:
                    $ref: '#/components/schemas/def-0'
                  hiddenBlueprints:
                    type: array
                    items:
                      type: string
                additionalProperties: false
                required:
                  - type
                  - dataset
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  icon:
                    type: string
                  type:
                    enum:
                      - entities-pie-chart
                  title:
                    type: string
                  property:
                    type: string
                  description:
                    type: string
                  dataset:
                    $ref: '#/components/schemas/def-0'
                additionalProperties: false
                required:
                  - type
                  - dataset
                  - property
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    type: string
                    enum:
                      - entities-number-chart
                  dataset:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          properties:
                            property:
                              type: string
                            operator:
                              enum:
                                - '>'
                                - '>='
                                - <
                                - <=
                            value:
                              type:
                                - number
                          required:
                            - property
                            - operator
                            - value
                          additionalProperties: false
                        - type: object
                          properties:
                            property:
                              type: string
                            operator:
                              enum:
                                - between
                                - notBetween
                                - =
                            value:
                              type: object
                              oneOf:
                                - type: object
                                  properties:
                                    from:
                                      type: string
                                      format: date-time
                                    to:
                                      type: string
                                      format: date-time
                                  required:
                                    - from
                                    - to
                                - type: object
                                  properties:
                                    preset:
                                      type: string
                                      enum:
                                        - today
                                        - tomorrow
                                        - yesterday
                                        - lastWeek
                                        - last2Weeks
                                        - lastMonth
                                        - last3Months
                                        - last6Months
                                        - last12Months
                                  required:
                                    - preset
                          required:
                            - property
                            - operator
                            - value
                          additionalProperties: false
                        - type: object
                          properties:
                            property:
                              type: string
                            operator:
                              enum:
                                - =
                                - '!='
                                - containsAny
                                - contains
                                - doesNotContain
                                - beginsWith
                                - doesNotBeginWith
                                - endsWith
                                - doesNotEndWith
                                - in
                                - notIn
                            value:
                              anyOf:
                                - type: 'null'
                                - type: string
                                - type: number
                                - type: boolean
                                - type: array
                                  items:
                                    type: string
                                - type: string
                                  format: date-time
                          additionalProperties: false
                          required:
                            - property
                            - operator
                            - value
                        - type: object
                          properties:
                            operator:
                              enum:
                                - isEmpty
                                - isNotEmpty
                            property:
                              type: string
                          required:
                            - operator
                            - property
                          additionalProperties: false
                        - type: object
                          properties:
                            operator:
                              enum:
                                - relatedTo
                            blueprint:
                              type: string
                            value:
                              type: string
                            direction:
                              enum:
                                - upstream
                                - downstream
                            required:
                              type: boolean
                          additionalProperties: false
                          required:
                            - operator
                            - value
                            - blueprint
                        - type: object
                          properties:
                            propertySchema:
                              type: object
                              properties:
                                type:
                                  type: string
                                format:
                                  type: string
                              required:
                                - type
                              additionalProperties: false
                            operator:
                              enum:
                                - =
                                - '!='
                            value:
                              anyOf:
                                - type: 'null'
                                - type: string
                                - type: number
                                - type: boolean
                          required:
                            - operator
                            - propertySchema
                          additionalProperties: false
                        - $ref: '#/components/schemas/def-0'
                  title:
                    type: string
                  icon:
                    type: string
                  description:
                    type: string
                  unit:
                    type: string
                    enum:
                      - none
                      - $
                      - €
                      - £
                      - '%'
                      - custom
                  unitAlignment:
                    type: string
                    enum:
                      - left
                      - right
                  calculationBy:
                    type: string
                    enum:
                      - entities
                      - property
                required:
                  - type
                  - dataset
                  - unit
                  - calculationBy
                allOf:
                  - properties:
                      property:
                        type: string
                      func:
                        type: string
                        enum:
                          - sum
                          - average
                          - min
                          - max
                          - median
                    required:
                      - property
                      - func
                  - properties:
                      func:
                        type: string
                        enum:
                          - average
                          - count
                    required:
                      - func
                  - properties:
                      averageOf:
                        type: string
                        enum:
                          - hour
                          - day
                          - week
                          - month
                          - total
                      measureTimeBy:
                        type: string
                    required:
                      - averageOf
                  - properties:
                      unitCustom:
                        type: string
                    required:
                      - unitCustom
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    type: string
                    enum:
                      - iframe-widget
                  title:
                    type: string
                  icon:
                    type: string
                  description:
                    type: string
                  url:
                    type: string
                    format: url
                  urlType:
                    type: string
                    enum:
                      - public
                      - protected
                required:
                  - type
                  - url
                  - urlType
                  - title
                allOf:
                  - properties:
                      tokenUrl:
                        type: string
                        format: url
                      authorizationUrl:
                        type: string
                        format: url
                      clientId:
                        type: string
                      scopes:
                        type: array
                        items:
                          type: string
                    required:
                      - tokenUrl
                      - authorizationUrl
                      - clientId
                      - scopes
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    type: string
                    enum:
                      - markdown
                  title:
                    type: string
                  icon:
                    type: string
                  markdown:
                    type: string
                required:
                  - type
                  - title
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    enum:
                      - team-info
                  title:
                    type: string
                  team_name:
                    type: string
                additionalProperties: false
                required:
                  - type
                  - team_name
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    type: string
                    enum:
                      - recently-viewed-entities
                  title:
                    type: string
                  icon:
                    type: string
                required:
                  - type
                  - title
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    type: string
                    enum:
                      - recently-used-actions
                  title:
                    type: string
                  icon:
                    type: string
                required:
                  - type
                  - title
              - type: object
                properties:
                  id:
                    type: string
                  updatedAt:
                    type: string
                  updatedBy:
                    type: string
                  createdAt:
                    type: string
                  createdBy:
                    type: string
                  type:
                    type: string
                    enum:
                      - my-entities
                  title:
                    type: string
                  icon:
                    type: string
                required:
                  - type
                  - title
      additionalProperties: false
      required:
        - type
        - layout
        - widgets
      title: /schemas/dashboardWidget
    def-2:
      type: object
      properties:
        id:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        type:
          type: string
          enum:
            - grouper
        title:
          type: string
        displayMode:
          type: string
          enum:
            - tabs
            - switch
        activeGroupUrlParam:
          type: string
        groupsOrder:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              icon:
                type: string
              widgets:
                type: array
                items:
                  anyOf:
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - entity-info
                        title:
                          type: string
                        entity:
                          type: string
                        hiddenQuery:
                          type: array
                          items:
                            type: string
                        blueprint:
                          type: string
                      additionalProperties: false
                      required:
                        - type
                        - entity
                        - blueprint
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - action-runs-table-widget
                        icon:
                          type: string
                        description:
                          type: string
                          maxLength: 200
                        title:
                          type: string
                        displayMode:
                          type: string
                          enum:
                            - single
                            - widget
                        blueprint:
                          type: string
                        action:
                          type: string
                        tableConfig:
                          type: object
                          properties:
                            filterSettings:
                              type: object
                              properties:
                                filterBy:
                                  $ref: '#/components/schemas/def-0'
                              additionalProperties: false
                              required:
                                - filterBy
                            groupSettings:
                              type: object
                              properties:
                                groupBy:
                                  type: array
                                  items:
                                    type: string
                              additionalProperties: false
                              required:
                                - groupBy
                            sortSettings:
                              type: object
                              properties:
                                sortBy:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      property:
                                        type: string
                                      order:
                                        enum:
                                          - asc
                                          - desc
                                    additionalProperties: false
                                    required:
                                      - property
                                      - order
                              additionalProperties: false
                            propertiesSettings:
                              type: object
                              properties:
                                hidden:
                                  type: array
                                  items:
                                    type: string
                                order:
                                  type: array
                                  items:
                                    type: string
                              additionalProperties: false
                          additionalProperties: false
                      additionalProperties: false
                      required:
                        - type
                        - action
                        - blueprint
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - table-entities-explorer
                        icon:
                          type: string
                        description:
                          type: string
                          maxLength: 200
                        title:
                          type: string
                        dataset:
                          $ref: '#/components/schemas/def-0'
                        excludedFields:
                          type: array
                          items:
                            type: string
                        displayMode:
                          type: string
                          enum:
                            - tabs
                            - single
                            - widget
                        blueprintConfig:
                          type: object
                          propertyNames:
                            pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                          additionalProperties:
                            type: object
                            properties:
                              filterSettings:
                                type: object
                                properties:
                                  filterBy:
                                    $ref: '#/components/schemas/def-0'
                                additionalProperties: false
                                required:
                                  - filterBy
                              groupSettings:
                                type: object
                                properties:
                                  groupBy:
                                    type: array
                                    items:
                                      type: string
                                additionalProperties: false
                                required:
                                  - groupBy
                              sortSettings:
                                type: object
                                properties:
                                  sortBy:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        property:
                                          type: string
                                        order:
                                          enum:
                                            - asc
                                            - desc
                                      additionalProperties: false
                                      required:
                                        - property
                                        - order
                                additionalProperties: false
                              propertiesSettings:
                                type: object
                                properties:
                                  hidden:
                                    type: array
                                    items:
                                      type: string
                                  order:
                                    type: array
                                    items:
                                      type: string
                                additionalProperties: false
                              tabIndex:
                                type: number
                              hidden:
                                type: boolean
                              title:
                                type: string
                                maxLength: 20
                              description:
                                type: string
                                maxLength: 200
                            additionalProperties: false
                      additionalProperties: false
                      required:
                        - type
                        - dataset
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - table-entities-explorer-by-direction
                        title:
                          type: string
                        blueprintConfig:
                          type: object
                          propertyNames:
                            pattern: >-
                              ^[A-Za-z0-9@_.:\\/=-]*\$(upstream|downstream|custom)(\$[A-Za-z0-9@_.:\\/=-]+)*$
                          additionalProperties:
                            type: object
                            properties:
                              filterSettings:
                                type: object
                                properties:
                                  filterBy:
                                    $ref: '#/components/schemas/def-0'
                                additionalProperties: false
                                required:
                                  - filterBy
                              groupSettings:
                                type: object
                                properties:
                                  groupBy:
                                    type: array
                                    items:
                                      type: string
                                additionalProperties: false
                                required:
                                  - groupBy
                              sortSettings:
                                type: object
                                properties:
                                  sortBy:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        property:
                                          type: string
                                        order:
                                          enum:
                                            - asc
                                            - desc
                                      additionalProperties: false
                                      required:
                                        - property
                                        - order
                                additionalProperties: false
                              propertiesSettings:
                                type: object
                                properties:
                                  hidden:
                                    type: array
                                    items:
                                      type: string
                                  order:
                                    type: array
                                    items:
                                      type: string
                                additionalProperties: false
                              tabIndex:
                                type: number
                              hidden:
                                type: boolean
                              title:
                                type: string
                                maxLength: 20
                              description:
                                type: string
                                maxLength: 200
                              dataset:
                                $ref: '#/components/schemas/def-0'
                              targetBlueprint:
                                type: string
                              relatedProperty:
                                type: string
                            additionalProperties: false
                      additionalProperties: false
                      required:
                        - type
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - table-audit-log
                        title:
                          type: string
                        description:
                          type: string
                        query:
                          type: object
                          properties:
                            identifier:
                              type: string
                            entity:
                              type: string
                            blueprint:
                              type: string
                            run_id:
                              type: string
                            webhookId:
                              type: string
                            webhookEventId:
                              type: string
                            origin:
                              type: array
                              items:
                                type: string
                            InstallationId:
                              type: string
                            resources:
                              anyOf:
                                - type: array
                                  items:
                                    enum:
                                      - blueprint
                                      - entity
                                      - run
                                      - webhook
                                      - scorecard
                                      - action
                                - type: string
                                  enum:
                                    - blueprint
                                    - entity
                                    - run
                                    - webhook
                                    - scorecard
                                    - action
                            includes:
                              type: array
                              items:
                                enum:
                                  - action
                                  - context
                                  - diff
                                  - identifier
                                  - resourceType
                                  - status
                                  - trigger
                                  - additionalData
                                  - message
                            from:
                              type: string
                              format: date-time
                              description: 'ISO format IE 2022-04-23T18:25:43.511Z'
                            to:
                              type: string
                              format: date-time
                              description: 'ISO format 2022-04-23T18:25:43.511Z'
                            action:
                              type: string
                            status:
                              type: string
                              enum:
                                - SUCCESS
                                - FAILURE
                            limit:
                              type: number
                          additionalProperties: false
                        tableConfig:
                          type: object
                          properties:
                            filterSettings:
                              type: object
                              properties:
                                filterBy:
                                  $ref: '#/components/schemas/def-0'
                              additionalProperties: false
                              required:
                                - filterBy
                            groupSettings:
                              type: object
                              properties:
                                groupBy:
                                  type: array
                                  items:
                                    type: string
                              additionalProperties: false
                              required:
                                - groupBy
                            sortSettings:
                              type: object
                              properties:
                                sortBy:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      property:
                                        type: string
                                      order:
                                        enum:
                                          - asc
                                          - desc
                                    additionalProperties: false
                                    required:
                                      - property
                                      - order
                              additionalProperties: false
                            propertiesSettings:
                              type: object
                              properties:
                                hidden:
                                  type: array
                                  items:
                                    type: string
                                order:
                                  type: array
                                  items:
                                    type: string
                              additionalProperties: false
                      additionalProperties: false
                      required:
                        - type
                        - query
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - users-table
                        title:
                          type: string
                        query:
                          type: object
                          properties:
                            team:
                              type: string
                        tableConfig:
                          type: object
                          properties:
                            filterSettings:
                              type: object
                              properties:
                                filterBy:
                                  $ref: '#/components/schemas/def-0'
                              additionalProperties: false
                              required:
                                - filterBy
                            groupSettings:
                              type: object
                              properties:
                                groupBy:
                                  type: array
                                  items:
                                    type: string
                              additionalProperties: false
                              required:
                                - groupBy
                            sortSettings:
                              type: object
                              properties:
                                sortBy:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      property:
                                        type: string
                                      order:
                                        enum:
                                          - asc
                                          - desc
                                    additionalProperties: false
                                    required:
                                      - property
                                      - order
                              additionalProperties: false
                            propertiesSettings:
                              type: object
                              properties:
                                hidden:
                                  type: array
                                  items:
                                    type: string
                                order:
                                  type: array
                                  items:
                                    type: string
                              additionalProperties: false
                      additionalProperties: false
                      required:
                        - type
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - teams-table
                        title:
                          type: string
                        query:
                          type: object
                          properties:
                            user:
                              type: string
                        tableConfig:
                          type: object
                          properties:
                            filterSettings:
                              type: object
                              properties:
                                filterBy:
                                  $ref: '#/components/schemas/def-0'
                              additionalProperties: false
                              required:
                                - filterBy
                            groupSettings:
                              type: object
                              properties:
                                groupBy:
                                  type: array
                                  items:
                                    type: string
                              additionalProperties: false
                              required:
                                - groupBy
                            sortSettings:
                              type: object
                              properties:
                                sortBy:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      property:
                                        type: string
                                      order:
                                        enum:
                                          - asc
                                          - desc
                                    additionalProperties: false
                                    required:
                                      - property
                                      - order
                              additionalProperties: false
                            propertiesSettings:
                              type: object
                              properties:
                                hidden:
                                  type: array
                                  items:
                                    type: string
                                order:
                                  type: array
                                  items:
                                    type: string
                              additionalProperties: false
                      additionalProperties: false
                      required:
                        - type
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - runs-table
                        title:
                          type: string
                        query:
                          type: object
                          properties:
                            entity:
                              type: string
                            blueprint:
                              type: string
                            active:
                              type: boolean
                            user_email:
                              type: string
                            limit:
                              type: number
                              minimum: 1
                              maximum: 50
                            external_run_id:
                              type: string
                            version:
                              type: string
                              enum:
                                - v1
                                - v2
                          additionalProperties: false
                        tableConfig:
                          type: object
                          properties:
                            filterSettings:
                              type: object
                              properties:
                                filterBy:
                                  $ref: '#/components/schemas/def-0'
                              additionalProperties: false
                              required:
                                - filterBy
                            groupSettings:
                              type: object
                              properties:
                                groupBy:
                                  type: array
                                  items:
                                    type: string
                              additionalProperties: false
                              required:
                                - groupBy
                            sortSettings:
                              type: object
                              properties:
                                sortBy:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      property:
                                        type: string
                                      order:
                                        enum:
                                          - asc
                                          - desc
                                    additionalProperties: false
                                    required:
                                      - property
                                      - order
                              additionalProperties: false
                            propertiesSettings:
                              type: object
                              properties:
                                hidden:
                                  type: array
                                  items:
                                    type: string
                                order:
                                  type: array
                                  items:
                                    type: string
                              additionalProperties: false
                      additionalProperties: false
                      required:
                        - type
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - run-info
                        title:
                          type: string
                        runId:
                          type: string
                      additionalProperties: false
                      required:
                        - type
                        - runId
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - user-info
                        title:
                          type: string
                        user_email:
                          type: string
                      additionalProperties: false
                      required:
                        - type
                        - user_email
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - graph-entities-explorer
                        title:
                          type: string
                        dataset:
                          $ref: '#/components/schemas/def-0'
                        hiddenBlueprints:
                          type: array
                          items:
                            type: string
                      additionalProperties: false
                      required:
                        - type
                        - dataset
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        icon:
                          type: string
                        type:
                          enum:
                            - entities-pie-chart
                        title:
                          type: string
                        property:
                          type: string
                        description:
                          type: string
                        dataset:
                          $ref: '#/components/schemas/def-0'
                      additionalProperties: false
                      required:
                        - type
                        - dataset
                        - property
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          type: string
                          enum:
                            - entities-number-chart
                        dataset:
                          type: array
                          items:
                            anyOf:
                              - type: object
                                properties:
                                  property:
                                    type: string
                                  operator:
                                    enum:
                                      - '>'
                                      - '>='
                                      - <
                                      - <=
                                  value:
                                    type:
                                      - number
                                required:
                                  - property
                                  - operator
                                  - value
                                additionalProperties: false
                              - type: object
                                properties:
                                  property:
                                    type: string
                                  operator:
                                    enum:
                                      - between
                                      - notBetween
                                      - =
                                  value:
                                    type: object
                                    oneOf:
                                      - type: object
                                        properties:
                                          from:
                                            type: string
                                            format: date-time
                                          to:
                                            type: string
                                            format: date-time
                                        required:
                                          - from
                                          - to
                                      - type: object
                                        properties:
                                          preset:
                                            type: string
                                            enum:
                                              - today
                                              - tomorrow
                                              - yesterday
                                              - lastWeek
                                              - last2Weeks
                                              - lastMonth
                                              - last3Months
                                              - last6Months
                                              - last12Months
                                        required:
                                          - preset
                                required:
                                  - property
                                  - operator
                                  - value
                                additionalProperties: false
                              - type: object
                                properties:
                                  property:
                                    type: string
                                  operator:
                                    enum:
                                      - =
                                      - '!='
                                      - containsAny
                                      - contains
                                      - doesNotContain
                                      - beginsWith
                                      - doesNotBeginWith
                                      - endsWith
                                      - doesNotEndWith
                                      - in
                                      - notIn
                                  value:
                                    anyOf:
                                      - type: 'null'
                                      - type: string
                                      - type: number
                                      - type: boolean
                                      - type: array
                                        items:
                                          type: string
                                      - type: string
                                        format: date-time
                                additionalProperties: false
                                required:
                                  - property
                                  - operator
                                  - value
                              - type: object
                                properties:
                                  operator:
                                    enum:
                                      - isEmpty
                                      - isNotEmpty
                                  property:
                                    type: string
                                required:
                                  - operator
                                  - property
                                additionalProperties: false
                              - type: object
                                properties:
                                  operator:
                                    enum:
                                      - relatedTo
                                  blueprint:
                                    type: string
                                  value:
                                    type: string
                                  direction:
                                    enum:
                                      - upstream
                                      - downstream
                                  required:
                                    type: boolean
                                additionalProperties: false
                                required:
                                  - operator
                                  - value
                                  - blueprint
                              - type: object
                                properties:
                                  propertySchema:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                      format:
                                        type: string
                                    required:
                                      - type
                                    additionalProperties: false
                                  operator:
                                    enum:
                                      - =
                                      - '!='
                                  value:
                                    anyOf:
                                      - type: 'null'
                                      - type: string
                                      - type: number
                                      - type: boolean
                                required:
                                  - operator
                                  - propertySchema
                                additionalProperties: false
                              - $ref: '#/components/schemas/def-0'
                        title:
                          type: string
                        icon:
                          type: string
                        description:
                          type: string
                        unit:
                          type: string
                          enum:
                            - none
                            - $
                            - €
                            - £
                            - '%'
                            - custom
                        unitAlignment:
                          type: string
                          enum:
                            - left
                            - right
                        calculationBy:
                          type: string
                          enum:
                            - entities
                            - property
                      required:
                        - type
                        - dataset
                        - unit
                        - calculationBy
                      allOf:
                        - properties:
                            property:
                              type: string
                            func:
                              type: string
                              enum:
                                - sum
                                - average
                                - min
                                - max
                                - median
                          required:
                            - property
                            - func
                        - properties:
                            func:
                              type: string
                              enum:
                                - average
                                - count
                          required:
                            - func
                        - properties:
                            averageOf:
                              type: string
                              enum:
                                - hour
                                - day
                                - week
                                - month
                                - total
                            measureTimeBy:
                              type: string
                          required:
                            - averageOf
                        - properties:
                            unitCustom:
                              type: string
                          required:
                            - unitCustom
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          type: string
                          enum:
                            - iframe-widget
                        title:
                          type: string
                        icon:
                          type: string
                        description:
                          type: string
                        url:
                          type: string
                          format: url
                        urlType:
                          type: string
                          enum:
                            - public
                            - protected
                      required:
                        - type
                        - url
                        - urlType
                        - title
                      allOf:
                        - properties:
                            tokenUrl:
                              type: string
                              format: url
                            authorizationUrl:
                              type: string
                              format: url
                            clientId:
                              type: string
                            scopes:
                              type: array
                              items:
                                type: string
                          required:
                            - tokenUrl
                            - authorizationUrl
                            - clientId
                            - scopes
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          type: string
                          enum:
                            - markdown
                        title:
                          type: string
                        icon:
                          type: string
                        markdown:
                          type: string
                      required:
                        - type
                        - title
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          enum:
                            - team-info
                        title:
                          type: string
                        team_name:
                          type: string
                      additionalProperties: false
                      required:
                        - type
                        - team_name
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          type: string
                          enum:
                            - recently-viewed-entities
                        title:
                          type: string
                        icon:
                          type: string
                      required:
                        - type
                        - title
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          type: string
                          enum:
                            - recently-used-actions
                        title:
                          type: string
                        icon:
                          type: string
                      required:
                        - type
                        - title
                    - type: object
                      properties:
                        id:
                          type: string
                        updatedAt:
                          type: string
                        updatedBy:
                          type: string
                        createdAt:
                          type: string
                        createdBy:
                          type: string
                        type:
                          type: string
                          enum:
                            - my-entities
                        title:
                          type: string
                        icon:
                          type: string
                      required:
                        - type
                        - title
            additionalProperties: false
            required:
              - title
              - widgets
      additionalProperties: false
      required:
        - type
        - groups
        - displayMode
      title: /schemas/grouperWidget
paths:
  '/v1/blueprints/{blueprint_identifier}/permissions':
    get:
      description: This route allows you to retrieve the permissions of a blueprint.<br/><br/>To learn more about permissions, check out the [documentation](https://docs.getport.io/build-your-software-catalog/set-catalog-rbac/examples).
      summary: Get a blueprint's permissions
      tags:
        - Blueprints
      parameters:
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          required: true
          description: The identifier of the blueprint whose permissions you want to retrieve.
      security:
        - bearer:
            - 'read:blueprints'
      responses:
        '200':
          description: Default Response
    patch:
      summary: Patch a blueprint's permissions
      description: This route allows you to patch the permissions of a blueprint.<br/><br/>To learn more about permissions, check out the [documentation](https://docs.getport.io/build-your-software-catalog/set-catalog-rbac/examples).
      tags:
        - Blueprints
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entities:
                  type: object
                  properties:
                    register:
                      type: object
                      description: Define who has permissions to create entities of this blueprint.
                      properties:
                        users:
                          type: array
                          description: List of users (email addresses) that are allowed to create entities of this blueprint.
                          items:
                            type: string
                        teams:
                          type: array
                          description: List of teams that are allowed to create entities of this blueprint.
                          items:
                            type: string
                        roles:
                          type: array
                          description: List of roles that are allowed to create entities of this blueprint.
                          items:
                            type: string
                        ownedByTeam:
                          description: If `true`, permissions will be determined by team ownership, rather than by roles or direct assignment to users. Every user will be able to create entities belonging to their team/s.
                          type: boolean
                      additionalProperties: false
                    update:
                      type: object
                      description: Define who has permissions to modify entities of this blueprint.
                      properties:
                        users:
                          type: array
                          description: List of users (email addresses) that are allowed to modify entities of this blueprint.
                          items:
                            type: string
                        teams:
                          type: array
                          description: List of teams that are allowed to modify entities of this blueprint.
                          items:
                            type: string
                        roles:
                          type: array
                          description: List of roles that are allowed to modify entities of this blueprint.
                          items:
                            type: string
                        ownedByTeam:
                          description: If `true`, permissions will be determined by team ownership, rather than by roles or direct assignment to users. Every user will be able to modify entities belonging to their team/s.
                          type: boolean
                      additionalProperties: false
                    unregister:
                      type: object
                      description: Define who has permissions to delete entities of this blueprint.
                      properties:
                        users:
                          type: array
                          description: List of users (email addresses) that are allowed to delete entities of this blueprint.
                          items:
                            type: string
                        teams:
                          type: array
                          description: List of teams that are allowed to delete entities of this blueprint.
                          items:
                            type: string
                        roles:
                          type: array
                          description: List of roles that are allowed to delete entities of this blueprint.
                          items:
                            type: string
                        ownedByTeam:
                          description: If `true`, permissions will be determined by team ownership, rather than by roles or direct assignment to users. Every user will be able to delete entities belonging to their team/s.
                          type: boolean
                      additionalProperties: false
                    updateProperties:
                      type: object
                      description: Define who has permissions to modify specific properties in entities of this blueprint.
                      additionalProperties:
                        type: object
                        properties:
                          users:
                            type: array
                            description: List of users (email addresses) that are allowed to modify properties in entities of this blueprint.
                            items:
                              type: string
                          teams:
                            type: array
                            description: List of teams that are allowed to modify properties in entities of this blueprint.
                            items:
                              type: string
                          roles:
                            type: array
                            description: List of roles that are allowed to modify properties in entities of this blueprint.
                            items:
                              type: string
                          ownedByTeam:
                            description: If `true`, permissions will be determined by team ownership, rather than by roles or direct assignment to users. Every user will be able to modify properties in entities belonging to their team/s.
                            type: boolean
                    updateRelations:
                      type: object
                      description: Define who has permissions to modify specific relations in entities of this blueprint.
                      additionalProperties:
                        type: object
                        properties:
                          users:
                            type: array
                            description: List of users (email addresses) that are allowed to modify relations in entities of this blueprint.
                            items:
                              type: string
                          teams:
                            type: array
                            description: List of teams that are allowed to modify relations in entities of this blueprint.
                            items:
                              type: string
                          roles:
                            type: array
                            description: List of roles that are allowed to modify relations in entities of this blueprint.
                            items:
                              type: string
                          ownedByTeam:
                            description: If `true`, permissions will be determined by team ownership, rather than by roles or direct assignment to users. Every user will be able to modify relations in entities belonging to their team/s.
                            type: boolean
                  additionalProperties: false
              additionalProperties: false
      parameters:
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          required: true
          description: The identifier of the blueprint whose permissions you want to patch.<br/>
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
  /v1/auth/access_token:
    post:
      summary: Create an access token
      description: This route allows you to create an access token for your Port account. You can use this token to authenticate your requests to the Port API.<br/><br/>To obtain your client ID and client secret, go to your [Port application](https://app.getport.io), click on the `...` button in the top right corner, then click `Credentials`.
      tags:
        - Authentication / Authorization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  description: Your Port client ID
                clientSecret:
                  type: string
                  description: Your Port client secret
              additionalProperties: false
              required:
                - clientId
                - clientSecret
        required: true
      responses:
        '200':
          description: Authorized successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    enum:
                      - true
                  accessToken:
                    type: string
                  expiresIn:
                    type: number
                    description: The number of seconds until the access token expires
                  tokenType:
                    type: string
                additionalProperties: false
                required:
                  - accessToken
                  - expiresIn
                  - tokenType
                description: Authorized successfully
  '/v1/blueprints/{blueprint_identifier}/entities':
    post:
      summary: Create an entity
      description: This route allows you to create an entity in your software catalog based on an existing blueprint in your data model. It can also be used to overwrite or update an existing entity.<br/><br/>To learn more about entities, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#entities).
      tags:
        - Entities
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                  description: The identifier of the new entity.<br/>
                title:
                  type: string
                  description: The title of the new entity.<br/>
                icon:
                  type: string
                  description: The icon of the new entity.<br/>
                team:
                  # oneOf:
                  #   - type: string
                  #     description: Team name
                  #   - type: array
                  #     items:
                        # type: string
                  type: string, string[]
                  description: The Port team/s to which the new entity will belong.<br/>
                properties:
                  type: object
                  description: An object containing the properties of the new entity, in `"key":"value"` pairs where the `key` is the property's identifier, and the `value` is its value.<br/>
                relations:
                  type: object
                  description: An object containing the relations of the new entity, in `"key":"value"` pairs where the `key` is the relation's identifier, and the `value` is the related entity's identifier.<br/>
              additionalProperties: true
            example:
              identifier: new-microservice
              title: MyNewMicroservice
              icon: Microservice
              team: []
              properties:
                content: my content
              relations: {}
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: upsert
          required: false
          description: If `true`, this call will override the entire entity if it already exists.<br/>
        - schema:
            type: boolean
            default: false
          in: query
          name: merge
          required: false
          description: If `true` and `merge` is also `true`, this call will update the entity if it already exists.<br/>
        - schema:
            type: boolean
            default: false
          in: query
          name: validation_only
          required: false
          description: If `true`, this call will only validate the entity and return the validation errors.<br/>
        - schema:
            type: boolean
            default: false
          in: query
          name: create_missing_related_entities
          required: false
          description: If `true`, this call will also create missing related entities.<br/>This is useful when you want to create an entity and its related entities in one call, or if you want to create an entity whose related entity does not exist yet.<br/>
        - schema:
            type: string
          in: query
          name: run_id
          required: false
          description: You can provide a `run_id` to associate the created entity with a specific [action run](https://docs.getport.io/create-self-service-experiences/reflect-action-progress/#tying-entities-to-an-action-run).<br/>
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          required: true
          description: The identifier of the blueprint you want to create an entity from.<br/>
      security:
        - bearer: []
      responses:
        '200':
          description: Successfully updated an entity
        '201':
          description: Successfully created an entity
        '400':
          description: |
            One of the following errors occurred: 

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`bad_request`</td>
              <td>The json provided does not match the route's schema</td>
            </tr>
            <tr>
              <td>`run_exhausted`</td>
              <td>The action run with the provided `runId` has already finished execution</td>
            </tr>
            </table>
        '403':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`required_relation`</td>
              <td>Relation cannot be deleted because it is a `required relation`</td>
            </tr>
            <tr>
              <td>`missing_permissions`</td>
              <td>You do not have permissions to perform the requested operation. For further details, please contact your admin</td>
            </tr>
            </table>
        '404':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>A resource with the provided `identifier` was not found</td>
            </tr>
            </table>
        '409':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`identifier_taken`</td>
              <td>The provided `identifier` already exists, identifiers must be unique</td>
            </tr>
            </table>
        '422':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`team_inheritance_enabled`</td>
              <td>The blueprint's entities inherite their team from other entities through an existing relation</td>
            </tr>
            <tr>
              <td>`blueprint_schema_mismatch`</td>
              <td>The provided entity does not match the blueprint's schema</td>
            </tr>
            <tr>
              <td>`required_relation`</td>
              <td>A relation is required</td>
            </tr>
            <tr>
              <td>`relation_many_violation`</td>
              <td>A provided relation cannot contain more than one entity</td>
            </tr>
            </table>
        '500':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`internal_error`</td>
              <td>An internal error occurred </td>
            </tr>
            </table>
    get:
      summary: Get all entities of a blueprint
      description: This route allows you to fetch all entities in your software catalog based on a given blueprint.<br/><br/>To learn more about entities, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#entities).
      tags:
        - Entities
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: exclude_calculated_properties
          required: false
          description: If `true`, [calculated properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/calculation-property/) will be excluded from the entities.<br/>
        - schema:
            type: array
            items:
              type: string
          in: query
          name: include
          required: false
          description: "An array of values from the [entity JSON](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#json-structure). Only these values will be returned in the response.<br/>For example: `{ \"properties.propertyIdentifier\",\"identifier\"}`"
        - schema:
            type: array
            items:
              type: string
          in: query
          name: exclude
          description: "An array of values from the [entity JSON](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#json-structure) to be ommitted from the response.<br/>For example: `{ \"properties.propertyIdentifier\",\"identifier\"}`"
          required: false
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          required: true
          description: The identifier of the blueprint whose entities you want to fetch.<br/>
      security:
        - bearer:
            - 'read:entities'
      responses:
        '200':
          description: Success
        '404':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>A blueprint with the provided `identifier` was not found</td>
            </tr>
            </table>
        '422':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`invalid_request`</td>
              <td>The provided data does not match the route schema</td>
            </tr>
            </table>
        '500':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`internal_error`</td>
              <td>An internal error occurred</td>
            </tr>
            </table>
  '/v1/blueprints/{blueprint_identifier}/entities/{entity_identifier}':
    patch:
      summary: Patch an entity
      description: This route allows you to edit a specific entity in your software catalog and update its properties.<br/><br/>To learn more about entities, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#entities).
      tags:
        - Entities
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type:
                    - string
                  pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                  description: The new identifier of the entity.<br/>
                title:
                  type: string
                  description: The new title of the entity.<br/>
                icon:
                  type: string
                  description: The new icon of the entity.<br/>
                team:
                  type: string, string[]
                  description: The Port team/s to which the entity will belong.<br/>
                properties:
                  type: object
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  description: An object containing the properties of the entity, in `"key":"value"` pairs where the `key` is the property's identifier, and the `value` is its value.<br/>
                relations:
                  type: object
                  description: An object containing the relations of the new entity, in `"key":"value"` pairs where the `key` is the relation's identifier, and the `value` is the related entity's identifier.
              additionalProperties: false
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: create_missing_related_entities
          required: false
          description: If `true`, this call will also create missing related entities.<br/>This is useful when you want to create an entity and its related entities in one call, or if you want to create an entity whose related entity does not exist yet.<br/>
        - schema:
            type: string
          in: query
          name: run_id
          required: false
          description: You can provide a `run_id` to associate the created entity with a specific [action run](https://docs.getport.io/create-self-service-experiences/reflect-action-progress/#tying-entities-to-an-action-run).<br/>
        - schema:
            type: string
          in: path
          name: entity_identifier
          required: true
          description: The identifier of the entity you want to patch.<br/>
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          required: true
          description: The identifier of the blueprint the entity belongs to.<br/>
      security:
        - bearer: []
      responses:
        '200':
          description: Successfully patched the entity
        '400':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`run_exhausted`</td>
              <td>Action run has already finished execution</td>
            </tr>

            </table>
        '403':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`required_relation`</td>
              <td>Relation cannot be deleted because it is a `required relation`</td>
            </tr>
            <tr>
              <td>`missing_permissions`</td>
              <td>You do not have permissions to perform the requested operation. For further details, please contact your admin</td>
            </tr>
            </table>
        '404':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>A blueprint with the provided `identifier` was not found</td>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>An entity with the provided `identifier` was not found</td>
            </tr>
            </table>
        '409':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`identifier_taken`</td>
              <td>The provided `identifier` already exists, identifiers must be unique</td>
            </tr>
            </table>
        '422':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`invalid_request`</td>
              <td>The provided data does not match the route schema</td>
            </tr>
            <tr>
              <td>`team_inheritance_enabled`</td>
              <td>The blueprint's entities inherite their team from other entities through an existing relation</td>
            </tr>
            <tr>
              <td>`blueprint_schema_mismatch`</td>
              <td>The provided entity does not match the blueprint's schema</td>
            </tr>
            <tr>
              <td>`required_relation`</td>
              <td>A relation is required</td>
            </tr>
            <tr>
              <td>`relation_many_violation`</td>
              <td>A provided relation cannot contain more than one entity</td>
            </tr>
            </table>
        '500':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`internal_error`</td>
              <td>An internal error occurred</td>
            </tr>
            </table>
    put:
      summary: Change an entity
      description: This route allows you to edit a specific entity in your software catalog and update its properties.<br/><br/>To learn more about entities, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#entities).
      tags:
        - Entities
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                  description: The new identifier of the entity.<br/>
                title:
                  type: string
                  description: The new title of the entity.<br/>
                icon:
                  type: string
                  description: The new icon of the entity.<br/>
                team:
                  type: string, string[]
                  description: The Port team/s to which the entity will belong.<br/>
                properties:
                  type: object
                  description: An object containing the properties of the entity, in `"key":"value"` pairs where the `key` is the property's identifier, and the `value` is its value.<br/>
                relations:
                  type: object
                  description: An object containing the relations of the new entity, in `"key":"value"` pairs where the `key` is the relation's identifier, and the `value` is the related entity's identifier.
              additionalProperties: true
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: create_missing_related_entities
          required: false
          description: If `true`, this call will also create missing related entities.<br/>This is useful when you want to create an entity and its related entities in one call, or if you want to create an entity whose related entity does not exist yet.<br/>
        - schema:
            type: string
          in: query
          name: run_id
          required: false
          description: You can provide a `run_id` to associate the modified entity with a specific [action run](https://docs.getport.io/create-self-service-experiences/reflect-action-progress/#tying-entities-to-an-action-run).<br/>
        - schema:
            type: string
          in: path
          name: entity_identifier
          required: true
          description: The identifier of the entity you want to change.<br/>
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          required: true
          description: The identifier of the blueprint the entity belongs to.<br/>
      security:
        - bearer: []
      responses:
        '200':
          description: Successfully changed the entity
        '400':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`run_exhausted`</td>
              <td>Action run has already finished execution</td>
            </tr>

            </table>
        '403':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`required_relation`</td>
              <td>Relation cannot be deleted because it is a `required relation`</td>
            </tr>
            <tr>
              <td>`missing_permissions`</td>
              <td>You do not have permissions to perform the requested operation. For further details, please contact your admin</td>
            </tr>
            </table>
        '404':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>A blueprint with the provided `identifier` was not found</td>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>An entity with the provided `identifier` was not found</td>
            </tr>
            </table>
        '409':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`identifier_taken`</td>
              <td>The provided `identifier` already exists, identifiers must be unique</td>
            </tr>
            </table>
        '422':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`invalid_request`</td>
              <td>The provided data does not match the route schema</td>
            </tr>
            <tr>
              <td>`team_inheritance_enabled`</td>
              <td>The blueprint's entities inherite their team from other entities through an existing relation</td>
            </tr>
            <tr>
              <td>`blueprint_schema_mismatch`</td>
              <td>The provided entity does not match the blueprint's schema</td>
            </tr>
            <tr>
              <td>`required_relation`</td>
              <td>A relation is required</td>
            </tr>
            <tr>
              <td>`relation_many_violation`</td>
              <td>A provided relation cannot contain more than one entity</td>
            </tr>
            </table>
        '500':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`internal_error`</td>
              <td>An internal error occurred</td>
            </tr>
            </table>
    get:
      summary: Get an entity
      description: This route allows you to fetch a specific entity in your software catalog.<br/><br/>To learn more about entities, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#entities).
      tags:
        - Entities
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: exclude_calculated_properties
          required: false
          description: If `true`, [calculated properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/calculation-property/) will be excluded from the entity.<br/>
        - schema:
            type: array
            items:
              type: string
          in: query
          name: include
          required: false
          description: "An array of values from the [entity JSON](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#json-structure). Only these values will be returned in the response.<br/>For example: `{ \"properties.propertyIdentifier\",\"identifier\"}`"
        - schema:
            type: array
            items:
              type: string
          in: query
          name: exclude
          required: false
          description: "An array of values from the [entity JSON](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#json-structure) to be ommitted from the response.<br/>For example: `{ \"properties.propertyIdentifier\",\"identifier\"}`"
        # - schema:
        #     type: boolean
        #   in: query
        #   name: compact
        #   required: false
        # - schema:
        #     type: boolean
        #     default: false
        #   in: query
        #   name: attach_title_to_relation
        #   required: false
        - schema:
            type: string
          in: path
          name: entity_identifier
          required: true
          description: The identifier of the entity you want to fetch.<br/>
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          required: true
          description: The identifier of the blueprint the entity belongs to.<br/>
      security:
        - bearer:
            - 'read:entities'
      responses:
        '200':
          description: Success
        '404':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>An entity with the provided `identifier` was not found</td>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>A blueprint with the provided `identifier` was not found</td>
            </tr>
            </table>
        '422':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`invalid_request`</td>
              <td>The provided data does not match the route schema</td>
            </tr>
            </table>
        '500':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`internal_error`</td>
              <td>An internal error occurred</td>
            </tr>
            </table>
    delete:
      summary: Delete an entity
      description: This route allows you to delete a specific entity in your software catalog.<br/><br/>To learn more about entities, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#entities).
      tags:
        - Entities
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: delete_dependents
          required: true
          description: If `true`, this call will also delete all entities with a relation to the deleted entity.<br/>
        - schema:
            type: string
          in: query
          name: run_id
          required: false
          description: You can provide a `run_id` to associate the deleted entity with a specific [action run](https://docs.getport.io/create-self-service-experiences/reflect-action-progress/#tying-entities-to-an-action-run).<br/>
        - schema:
            type: string
          in: path
          name: entity_identifier
          required: true
          description: The identifier of the entity you want to delete.<br/>
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          required: true
          description: The identifier of the blueprint the entity belongs to.<br/>
      security:
        - bearer: []
      responses:
        '200':
          description: Entity deleted successfully
          # content:
          #   application/json:
          #     schema:
          #       description: Deleted successfully.
          #       type: object
          #       properties:
          #         ok:
          #           enum:
          #             - true
          #       additionalProperties: false
          #       required:
          #         - ok
        '403':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`missing_permissions`</td>
              <td>You do not have permissions to perform the requested operation. For further details, please contact your admin</td>
            </tr>
            <tr>
              <td>`has_dependents`</td>
              <td>The entity has dependent entities that must be deleted along with it. To do that, use "delete_dependents=true"</td>
            </tr>
            </table>
        '404':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>An entity with the provided `identifier` was not found</td>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>A blueprint with the provided `identifier` was not found</td>
            </tr>
            </table>
        '422':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`invalid_request`</td>
              <td>The provided data does not match the route schema</td>
            </tr>
            </table>
        '500':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`internal_error`</td>
              <td>An internal error occurred</td>
            </tr>
            </table>
  '/v1/blueprints/{blueprint_identifier}/entities-count':
    get:
      summary: Get a blueprint's entity count
      description: This route allows you to count the number of entities in a specific blueprint in your software catalog.<br/><br/>To learn more about entities, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#entities).
      tags:
        - Entities
      parameters:
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          required: true
          description: The identifier of the blueprint whose entities you want to count.<br/>
      security:
        - bearer: []
      responses:
        '200':
          description: Success
        '404':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>A blueprint with the provided `identifier` was not found</td>
            </tr>
            </table>
        '422':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`invalid_request`</td>
              <td>The provided data does not match the route schema</td>
            </tr>
            </table>
        '500':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`internal_error`</td>
              <td>An internal error occurred</td>
            </tr>
            </table>
  '/v1/blueprints/{blueprint_identifier}/all-entities':
    delete:
      summary: Delete all entities of a blueprint
      description: This route allows you to delete all entities of a specific blueprint in your software catalog.<br/><br/>To learn more about entities, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#entities).
      tags:
        - Entities
      parameters:
        - schema:
            type: string
          in: query
          name: run_id
          required: false
          description: You can provide a `run_id` to associate the deleted entities with a specific [action run](https://docs.getport.io/create-self-service-experiences/reflect-action-progress/#tying-entities-to-an-action-run).<br/>
        - schema:
            type: boolean
          in: query
          name: delete_blueprint
          required: false
          description: If `true`, this call will also delete the blueprint itself.<br/>
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          required: true
          description: The identifier of the blueprint whose entities you want to delete.<br/>
      security:
        - bearer: []
      responses:
        '200':
          description: Entities deleted successfully
        '403':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`missing_permissions`</td>
              <td>You do not have permissions to perform the requested operation. For further details, please contact your admin</td>
            </tr>
            <tr>
              <td>`has_dependents`</td>
              <td>The entity has dependent entities that must be deleted along with it. To do that, use "delete_dependents=true"</td>
            </tr>
            </table>
        '404':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`not_found`</td>
              <td>A blueprint with the provided `identifier` was not found</td>
            </tr>
            </table>
        '422':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`invalid_request`</td>
              <td>The provided data does not match the route schema</td>
            </tr>
            </table>
        '500':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`internal_error`</td>
              <td>An internal error occurred</td>
            </tr>
            </table>
  /v1/entities/search:
    post:
      summary: Search entities
      tags:
        - Entities
      description: This route allows you to search for entities in your software catalog based on a given set of rules.<br/><br/>To learn more about entities, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#entities).<br/><br/>For more details about Port's search mechanism, rules, and operators - see the [search & query documentation](https://docs.getport.io/search-and-query/).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                combinator:
                  enum:
                    - and
                    - or
                  description: The combinator to use for the rules.<br/>
                rules:
                  type: array
                  items:
                    anyOf:
                      - type: object
                        properties:
                          property:
                            type: string
                          operator:
                            enum:
                              - '>'
                              - '>='
                              - <
                              - <=
                          value:
                            type:
                              - number
                        required:
                          - property
                          - operator
                          - value
                        additionalProperties: false
                        title: Number Rule
                      - type: object
                        properties:
                          property:
                            type: string
                          operator:
                            enum:
                              - between
                              - notBetween
                              - =
                          value:
                            type: object
                            oneOf:
                              - type: object
                                properties:
                                  from:
                                    type: string
                                    format: date-time
                                  to:
                                    type: string
                                    format: date-time
                                required:
                                  - from
                                  - to
                                title: Date Range
                              - type: object
                                properties:
                                  preset:
                                    type: string
                                    enum:
                                      - today
                                      - tomorrow
                                      - yesterday
                                      - lastWeek
                                      - last2Weeks
                                      - lastMonth
                                      - last3Months
                                      - last6Months
                                      - last12Months
                                required:
                                  - preset
                                title: Date Preset
                        required:
                          - property
                          - operator
                          - value
                        additionalProperties: false
                        title: Date Rule
                      - type: object
                        properties:
                          property:
                            type: string
                          operator:
                            enum:
                              - =
                              - '!='
                              - containsAny
                              - contains
                              - doesNotContain
                              - beginsWith
                              - doesNotBeginWith
                              - endsWith
                              - doesNotEndWith
                              - in
                              - notIn
                          value:
                            anyOf:
                              - type: string
                                title: string
                              - type: number
                                title: number
                              - type: boolean
                                title: boolean
                              - type: array
                                title: array
                                items:
                                  type: string
                              - type: string
                                title: date-time
                                format: date-time
                        additionalProperties: false
                        title: String Rule
                        required:
                          - property
                          - operator
                          - value
                      - type: object
                        properties:
                          operator:
                            enum:
                              - isEmpty
                              - isNotEmpty
                          property:
                            type: string
                        required:
                          - operator
                          - property
                        additionalProperties: false
                        title: Empty Rule
                      - type: object
                        properties:
                          operator:
                            enum:
                              - relatedTo
                          blueprint:
                            type: string
                          value:
                            type: string
                          direction:
                            enum:
                              - upstream
                              - downstream
                          required:
                            type: boolean
                        additionalProperties: false
                        title: Relation Rule
                        required:
                          - operator
                          - value
                          - blueprint
                      - type: object
                        properties:
                          propertySchema:
                            type: object
                            properties:
                              type:
                                type: string
                              format:
                                type: string
                            required:
                              - type
                            additionalProperties: false
                          operator:
                            enum:
                              - =
                              - '!='
                          value:
                            anyOf:
                              - type: 'null'
                              - type: string
                                title: string
                              - type: number
                                title: number
                              - type: boolean
                                title: boolean
                        required:
                          - operator
                          - propertySchema
                        additionalProperties: false
                        title: Schema Rule
                      # - $ref: '#/components/schemas/def-0'
              required:
                - combinator
                - rules
              additionalProperties: false
        required: true
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: exclude_calculated_properties
          required: false
          description: If `true`, [calculated properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/calculation-property/) will be excluded from the entities.<br/>
        - schema:
            type: array
            items:
              type: string
          in: query
          name: include
          required: false
          description: "An array of values from the [entity JSON](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#json-structure). Only these values will be returned in the response.<br/>For example: `{ \"properties.propertyIdentifier\",\"identifier\"}`"
        - schema:
            type: array
            items:
              type: string
          in: query
          name: exclude
          required: false
          description: "An array of values from the [entity JSON](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/#json-structure) to be ommitted from the response.<br/>For example: `{ \"properties.propertyIdentifier\",\"identifier\"}`"
        # - schema:
        #     type: boolean
        #   in: query
        #   name: compact
        #   required: false
        # - schema:
        #     type: boolean
        #     default: false
        #   in: query
        #   name: attach_title_to_relation
        #   required: false
      security:
        - bearer:
            - 'read:entities'
      responses:
        '200':
          description: Success
        '422':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`invalid_request`</td>
              <td>The provided data does not match the route schema</td>
            </tr>
            </table>
        '500':
          description: |
            One of the following errors occurred:

            <table>
            <tr>
              <th>Error</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>`internal_error`</td>
              <td>An internal error occurred</td>
            </tr>
            </table>
  # /v1/entities/aggregate:
  #   post:
  #     summary: Aggregate entities
  #     tags:
  #       - Entities
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             oneOf:
  #               - type: object
  #                 properties:
  #                   func:
  #                     type: string
  #                     enum:
  #                       - average
  #                       - count
  #                   averageOf:
  #                     type: string
  #                     enum:
  #                       - hour
  #                       - day
  #                       - week
  #                       - month
  #                       - total
  #                   measureTimeBy:
  #                     type: string
  #                   calculationBy:
  #                     type: string
  #                   query:
  #                     $ref: '#/components/schemas/def-0'
  #                 additionalProperties: false
  #                 required:
  #                   - func
  #                   - query
  #               - type: object
  #                 properties:
  #                   property:
  #                     type: string
  #                   func:
  #                     type: string
  #                     enum:
  #                       - sum
  #                       - average
  #                       - min
  #                       - max
  #                       - median
  #                   averageOf:
  #                     type: string
  #                     enum:
  #                       - hour
  #                       - day
  #                       - week
  #                       - month
  #                       - total
  #                   measureTimeBy:
  #                     type: string
  #                   calculationBy:
  #                     type: string
  #                   query:
  #                     $ref: '#/components/schemas/def-0'
  #                 additionalProperties: false
  #                 required:
  #                   - func
  #                   - property
  #                   - query
  #               - type: object
  #                 oneOf:
  #                   - properties:
  #                       func:
  #                         enum:
  #                           - countValues
  #                       query:
  #                         $ref: '#/components/schemas/def-0'
  #                       property:
  #                         type: string
  #                     required:
  #                       - func
  #                       - query
  #                       - property
  #                     additionalProperties: false
  #                   - properties:
  #                       func:
  #                         enum:
  #                           - countValues
  #                       query:
  #                         $ref: '#/components/schemas/def-0'
  #                       relation:
  #                         type: string
  #                     required:
  #                       - func
  #                       - query
  #                       - relation
  #                     additionalProperties: false
  #                   - properties:
  #                       func:
  #                         enum:
  #                           - countValues
  #                       query:
  #                         $ref: '#/components/schemas/def-0'
  #                       scorecard:
  #                         type: string
  #                     required:
  #                       - func
  #                       - query
  #                       - scorecard
  #                     additionalProperties: false
  #                   - properties:
  #                       func:
  #                         enum:
  #                           - countValues
  #                       query:
  #                         $ref: '#/components/schemas/def-0'
  #                       rule:
  #                         type: string
  #                       scorecard:
  #                         type: string
  #                     required:
  #                       - func
  #                       - query
  #                       - rule
  #                       - scorecard
  #                     additionalProperties: false
  #     security:
  #       - bearer:
  #           - 'read:entities'
  #     responses:
  #       '200':
  #         description: Default Response
  /v1/blueprints:
    get:
      summary: Get all blueprints
      description: This route allows you to fetch all blueprints in your Port account.<br/><br/>To learn more about blueprints, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/).
      tags:
        - Blueprints
      security:
        - bearer:
            - 'read:blueprints'
      responses:
        '200':
          description: Default Response
    post:
      summary: Create a blueprint
      description: This route allows you to create a new blueprint in your data model.<br/><br/>To learn more about blueprints, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/).
      tags:
        - Blueprints
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: The identifier of the new blueprint.<br/>
                  pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                  maxLength: 30
                title:
                  type: string
                  description: The title of the new blueprint.<br/>
                  maxLength: 30
                description:
                  type: string
                  description: The description of the new blueprint.<br/>
                  maxLength: 200
                icon:
                  type: string
                  description: The icon of the new blueprint.<br/>
                teamInheritance:
                  type: object
                  description: "A relation to another blueprint from which to inherit the team. Can be any blueprint connected to this one via any number of relations. `path` is the path to the desired blueprint via relations, for example: `\"relationIdentifier.relationIdentifierInRelatedBlueprint\"`<br/>"
                  properties:
                    path:
                      type: string
                  additionalProperties: false
                  required:
                    - path
                schema:
                  type: object
                  description: The schema of the new blueprint, see `properties` and `required` below for more information.<br/>
                  properties:
                    properties:
                      type: object
                      description: The properties of the new blueprint.<br/>
                      propertyNames:
                        pattern: '^[A-Za-z0-9@_=\\-]+$'
                      additionalProperties:
                        type: object
                        properties:
                          title:
                            type: string
                            description: The title of the property.<br/>
                          description:
                            type: string
                            description: The description of the property.<br/>
                          icon:
                            type: string
                            description: The icon of the property.<br/>
                          type:
                            description: The [type](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/#supported-properties) of the property.<br/>
                            enum:
                              - string
                              - number
                              - boolean
                              - object
                              - array
                          format:
                            description: The type's [format](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/#supported-properties).<br/>
                            enum:
                              - date-time
                              - url
                              - email
                              - ipv4
                              - ipv6
                              - markdown
                              - yaml
                              - user
                              - team
                              - timer
                              - proto
                          spec:
                            description: The [spec](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/#supported-properties) of the property.<br/>
                            enum:
                              - open-api
                              - embedded-url
                              - async-api
                        required:
                          - type
                    required:
                      type: array
                      description: The required properties of the blueprint, these must be provided when creating an entity based on this blueprint. This is an array of the required properties' identifiers.<br/>
                      items:
                        type: string
                  additionalProperties: false
                  required:
                    - properties
                calculationProperties:
                  type: object
                  description: The [calculation properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/calculation-property/) of the new blueprint.<br/>
                  default: {}
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      icon:
                        type: string
                      calculation:
                        type: string
                      type:
                        enum:
                          - string
                          - number
                          - boolean
                          - object
                          - array
                      format:
                        enum:
                          - date-time
                          - url
                          - email
                          - ipv4
                          - ipv6
                          - markdown
                          - yaml
                          - user
                          - team
                          - proto
                      spec:
                        enum:
                          - open-api
                          - embedded-url
                          - async-api
                      colorized:
                        type: boolean
                      colors:
                        type: object
                      items:
                        type: object
                        properties:
                          type:
                            enum:
                              - string
                              - number
                              - boolean
                              - object
                              - array
                          format:
                            enum:
                              - date-time
                              - url
                              - email
                              - ipv4
                              - ipv6
                              - markdown
                              - yaml
                              - user
                              - team
                              - timer
                              - proto
                    required:
                      - calculation
                      - type
                mirrorProperties:
                  type: object
                  description: The [mirror properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/mirror-property/) of the new blueprint.<br/>
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      path:
                        type: string
                        pattern: '^(?:[A-Za-z0-9@_=\-]+\.)+?(\w|\$|@|-)*?[^\.]+$'
                      title:
                        type: string
                    additionalProperties: false
                    required:
                      - path
                aggregationProperties:
                  type: object
                  description: The [aggregation properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/aggregation-property/) of the new blueprint.<br/>
                  default: {}
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      icon:
                        type: string
                      type:
                        enum:
                          - number
                        default: number
                      target:
                        type: string
                      calculationSpec:
                        type: object
                        oneOf:
                          - oneOf:
                              - type: object
                                properties:
                                  func:
                                    enum:
                                      - average
                                  measureTimeBy:
                                    type: string
                                  averageOf:
                                    type: string
                                    enum:
                                      - hour
                                      - day
                                      - week
                                      - month
                                      - total
                                  calculationBy:
                                    type: string
                                    enum:
                                      - entities
                                required:
                                  - func
                                  - calculationBy
                                  - averageOf
                              - type: object
                                properties:
                                  func:
                                    enum:
                                      - count
                                  calculationBy:
                                    type: string
                                    enum:
                                      - entities
                                required:
                                  - func
                                  - calculationBy
                          - oneOf:
                              - type: object
                                properties:
                                  func:
                                    type: string
                                    enum:
                                      - sum
                                      - min
                                      - max
                                      - median
                                  property:
                                    type: string
                                  calculationBy:
                                    type: string
                                    enum:
                                      - property
                                additionalProperties: false
                                required:
                                  - func
                                  - property
                                  - calculationBy
                              - type: object
                                properties:
                                  func:
                                    enum:
                                      - average
                                  measureTimeBy:
                                    type: string
                                  averageOf:
                                    type: string
                                    enum:
                                      - hour
                                      - day
                                      - week
                                      - month
                                      - total
                                  property:
                                    type: string
                                  calculationBy:
                                    type: string
                                    enum:
                                      - property
                                additionalProperties: false
                                required:
                                  - func
                                  - property
                                  - calculationBy
                                  - averageOf
                      query:
                        $ref: '#/components/schemas/def-0'
                    additionalProperties: false
                    required:
                      - title
                      - target
                      - calculationSpec
                relations:
                  type: object
                  description: The [relations](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/relate-blueprints/) of the new blueprint.<br/>
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      title:
                        type: string
                      target:
                        type: string
                      required:
                        type: boolean
                        default: false
                      many:
                        type: boolean
                        default: false
                      description:
                        type: string
                    additionalProperties: false
                    required:
                      - target
                      - required
                      - many
                changelogDestination:
                  description: The destination of the blueprint's changelog.<br/>
                  oneOf:
                    - type: object
                      title: Webhook
                      description: The changelog will be sent to the specified webhook.<br/>
                      properties:
                        type:
                          type: string
                          enum:
                            - WEBHOOK
                        agent:
                          type: boolean
                          description: If `true`, Port's execution agent will be used to send the changelog.<br/>
                        url:
                          type: string
                          description: The URL of the webhook.<br/>
                          format: uri
                      required:
                        - url
                        - type
                      additionalProperties: false
                    - type: object
                      title: Kafka
                      description: The changelog will be sent to the Kafka topic connected to your Port account.<br/>
                      properties:
                        type:
                          type: string
                          enum:
                            - KAFKA
                      required:
                        - type
                      additionalProperties: false
              additionalProperties: true
              required:
                - identifier
                - title
                - schema
        required: true
      security:
        - bearer:
            - 'create:blueprints'
      responses:
        '200':
          description: Default Response
  '/v1/blueprints/{identifier}':
    get:
      summary: Get a blueprint
      description: This route allows you to fetch a specific blueprint in your Port account.<br/><br/>To learn more about blueprints, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/).
      tags:
        - Blueprints
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the blueprint you want to fetch.<br/>
          required: true
      security:
        - bearer:
            - 'read:blueprints'
      responses:
        '200':
          description: Default Response
    put:
      summary: Change a blueprint
      description: This route allows you to change a specific blueprint in your Port account.<br/><br/>To learn more about blueprints, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/).
      tags:
        - Blueprints
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: The new identifier of the blueprint.<br/>
                  pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                  maxLength: 30
                title:
                  type: string
                  description: The new title of the blueprint.<br/>
                  maxLength: 30
                description:
                  type: string
                  description: The new description of the blueprint.<br/>
                  maxLength: 200
                icon:
                  type: string
                  description: The new icon of the blueprint.<br/>
                teamInheritance:
                  type: object
                  description: "A new relation to another blueprint from which to inherit the team. Can be any blueprint connected to this one via any number of relations. `path` is the path to the desired blueprint via relations, for example: `\"relationIdentifier.relationIdentifierInRelatedBlueprint\"`<br/>"
                  properties:
                    path:
                      type: string
                  additionalProperties: false
                  required:
                    - path
                schema:
                  type: object
                  description: The new schema of the blueprint, see `properties` and `required` below for more information.<br/>
                  properties:
                    properties:
                      type: object
                      description: The new properties of the blueprint.<br/>
                      propertyNames:
                        pattern: '^[A-Za-z0-9@_=\\-]+$'
                      additionalProperties:
                        type: object
                        properties:
                          title:
                            type: string
                          description:
                            type: string
                          icon:
                            type: string
                          type:
                            enum:
                              - string
                              - number
                              - boolean
                              - object
                              - array
                          format:
                            enum:
                              - date-time
                              - url
                              - email
                              - ipv4
                              - ipv6
                              - markdown
                              - yaml
                              - user
                              - team
                              - timer
                              - proto
                          spec:
                            enum:
                              - open-api
                              - embedded-url
                              - async-api
                        required:
                          - type
                    required:
                      type: array
                      description: The new required properties of the blueprint, these must be provided when creating an entity based on this blueprint. This is an array of the required properties' identifiers.<br/>
                      items:
                        type: string
                  additionalProperties: false
                  required:
                    - properties
                calculationProperties:
                  type: object
                  description: The new [calculation properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/calculation-property/) of the blueprint.<br/>
                  default: {}
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      icon:
                        type: string
                      calculation:
                        type: string
                      type:
                        enum:
                          - string
                          - number
                          - boolean
                          - object
                          - array
                      format:
                        enum:
                          - date-time
                          - url
                          - email
                          - ipv4
                          - ipv6
                          - markdown
                          - yaml
                          - user
                          - team
                          - proto
                      spec:
                        enum:
                          - open-api
                          - embedded-url
                          - async-api
                      colorized:
                        type: boolean
                      colors:
                        type: object
                      items:
                        type: object
                        properties:
                          type:
                            enum:
                              - string
                              - number
                              - boolean
                              - object
                              - array
                          format:
                            enum:
                              - date-time
                              - url
                              - email
                              - ipv4
                              - ipv6
                              - markdown
                              - yaml
                              - user
                              - team
                              - timer
                              - proto
                    required:
                      - calculation
                      - type
                mirrorProperties:
                  type: object
                  description: The new [mirror properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/mirror-property/) of the blueprint.<br/>
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      path:
                        type: string
                        pattern: '^(?:[A-Za-z0-9@_=\-]+\.)+?(\w|\$|@|-)*?[^\.]+$'
                      title:
                        type: string
                    additionalProperties: false
                    required:
                      - path
                aggregationProperties:
                  type: object
                  description: The new [aggregation properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/aggregation-property/) of the blueprint.<br/>
                  default: {}
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      icon:
                        type: string
                      type:
                        enum:
                          - number
                        default: number
                      target:
                        type: string
                      calculationSpec:
                        type: object
                        description: The calculation specification of the aggregation property. For more information and examples, see the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/aggregation-property/).<br/>
                        oneOf:
                          - oneOf:
                              - type: object
                                properties:
                                  func:
                                    enum:
                                      - average
                                  measureTimeBy:
                                    type: string
                                  averageOf:
                                    type: string
                                    enum:
                                      - hour
                                      - day
                                      - week
                                      - month
                                      - total
                                  calculationBy:
                                    type: string
                                    enum:
                                      - entities
                                required:
                                  - func
                                  - calculationBy
                                  - averageOf
                              - type: object
                                properties:
                                  func:
                                    enum:
                                      - count
                                  calculationBy:
                                    type: string
                                    enum:
                                      - entities
                                required:
                                  - func
                                  - calculationBy
                          - oneOf:
                              - type: object
                                properties:
                                  func:
                                    type: string
                                    enum:
                                      - sum
                                      - min
                                      - max
                                      - median
                                  property:
                                    type: string
                                  calculationBy:
                                    type: string
                                    enum:
                                      - property
                                additionalProperties: false
                                required:
                                  - func
                                  - property
                                  - calculationBy
                              - type: object
                                properties:
                                  func:
                                    enum:
                                      - average
                                  measureTimeBy:
                                    type: string
                                  averageOf:
                                    type: string
                                    enum:
                                      - hour
                                      - day
                                      - week
                                      - month
                                      - total
                                  property:
                                    type: string
                                  calculationBy:
                                    type: string
                                    enum:
                                      - property
                                additionalProperties: false
                                required:
                                  - func
                                  - property
                                  - calculationBy
                                  - averageOf
                      query:
                        $ref: '#/components/schemas/def-0'
                    additionalProperties: false
                    required:
                      - title
                      - target
                      - calculationSpec
                relations:
                  type: object
                  description: The new [relations](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/relate-blueprints/) of the blueprint.<br/>
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      title:
                        type: string
                      target:
                        type: string
                      required:
                        type: boolean
                        default: false
                      many:
                        type: boolean
                        default: false
                      description:
                        type: string
                    additionalProperties: false
                    required:
                      - target
                      - required
                      - many
                changelogDestination:
                  description: The destination of the blueprint's changelog.<br/>
                  oneOf:
                    - type: object
                      title: Webhook
                      description: The changelog will be sent to the specified webhook.<br/>
                      properties:
                        type:
                          type: string
                          enum:
                            - WEBHOOK
                        agent:
                          type: boolean
                          description: If `true`, Port's execution agent will be used to send the changelog.<br/>
                        url:
                          type: string
                          description: The URL of the webhook.<br/>
                          format: uri
                      required:
                        - url
                        - type
                      additionalProperties: false
                    - type: object
                      title: Kafka
                      description: The changelog will be sent to the Kafka topic connected to your Port account.<br/>
                      properties:
                        type:
                          type: string
                          enum:
                            - KAFKA
                      required:
                        - type
                      additionalProperties: false
              additionalProperties: true
              required:
                - title
                - schema
        required: true
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the blueprint you want to change.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
    patch:
      summary: Patch a blueprint
      description: This route allows you to patch a specific blueprint in your Port account.<br/><br/>To learn more about blueprints, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/).
      tags:
        - Blueprints
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: The new identifier of the blueprint.<br/>
                  pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                  maxLength: 30
                title:
                  type: string
                  description: The new title of the blueprint.<br/>
                  maxLength: 30
                description:
                  type: string
                  description: The new description of the blueprint.<br/>
                  maxLength: 200
                icon:
                  type: string
                  description: The new icon of the blueprint.<br/>
                teamInheritance:
                  type: object
                  description: "A new relation to another blueprint from which to inherit the team. Can be any blueprint connected to this one via any number of relations. `path` is the path to the desired blueprint via relations, for example: `\"relationIdentifier.relationIdentifierInRelatedBlueprint\"`<br/>"
                  properties:
                    path:
                      type: string
                      description: The path to the desired blueprint via relations.<br/>
                  additionalProperties: false
                  required:
                    - path
                schema:
                  type: object
                  description: The new schema of the blueprint, see `properties` and `required` below for more information.<br/>
                  properties:
                    properties:
                      type: object
                      description: The new properties of the blueprint.<br/>
                      propertyNames:
                        pattern: '^[A-Za-z0-9@_=\\-]+$'
                      additionalProperties:
                        type: object
                        properties:
                          title:
                            type: string
                          description:
                            type: string
                          icon:
                            type: string
                          type:
                            enum:
                              - string
                              - number
                              - boolean
                              - object
                              - array
                          format:
                            enum:
                              - date-time
                              - url
                              - email
                              - ipv4
                              - ipv6
                              - markdown
                              - yaml
                              - user
                              - team
                              - timer
                              - proto
                          spec:
                            enum:
                              - open-api
                              - embedded-url
                              - async-api
                    required:
                      type: array
                      description: The new required properties of the blueprint, these must be provided when creating an entity based on this blueprint. This is an array of the required properties' identifiers.<br/>
                      items:
                        type: string
                  additionalProperties: false
                  required:
                    - properties
                calculationProperties:
                  type: object
                  description: The new [calculation properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/calculation-property/) of the blueprint.<br/>
                  default: {}
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      icon:
                        type: string
                      calculation:
                        type: string
                      type:
                        enum:
                          - string
                          - number
                          - boolean
                          - object
                          - array
                      format:
                        enum:
                          - date-time
                          - url
                          - email
                          - ipv4
                          - ipv6
                          - markdown
                          - yaml
                          - user
                          - team
                          - proto
                      spec:
                        enum:
                          - open-api
                          - embedded-url
                          - async-api
                      colorized:
                        type: boolean
                      colors:
                        type: object
                      items:
                        type: object
                        properties:
                          type:
                            enum:
                              - string
                              - number
                              - boolean
                              - object
                              - array
                          format:
                            enum:
                              - date-time
                              - url
                              - email
                              - ipv4
                              - ipv6
                              - markdown
                              - yaml
                              - user
                              - team
                              - timer
                              - proto
                    required:
                      - calculation
                      - type
                mirrorProperties:
                  type: object
                  description: The new [mirror properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/mirror-property/) of the blueprint.<br/>
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      path:
                        type: string
                        pattern: '^(?:[A-Za-z0-9@_=\-]+\.)+?(\w|\$|@|-)*?[^\.]+$'
                      title:
                        type: string
                    additionalProperties: false
                    required:
                      - path
                aggregationProperties:
                  type: object
                  description: The new [aggregation properties](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/properties/aggregation-property/) of the blueprint.<br/>
                  default: {}
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      icon:
                        type: string
                      type:
                        enum:
                          - number
                        default: number
                      target:
                        type: string
                      calculationSpec:
                        type: object
                        oneOf:
                          - oneOf:
                              - type: object
                                properties:
                                  func:
                                    enum:
                                      - average
                                  measureTimeBy:
                                    type: string
                                  averageOf:
                                    type: string
                                    enum:
                                      - hour
                                      - day
                                      - week
                                      - month
                                      - total
                                  calculationBy:
                                    type: string
                                    enum:
                                      - entities
                                required:
                                  - func
                                  - calculationBy
                                  - averageOf
                              - type: object
                                properties:
                                  func:
                                    enum:
                                      - count
                                  calculationBy:
                                    type: string
                                    enum:
                                      - entities
                                required:
                                  - func
                                  - calculationBy
                          - oneOf:
                              - type: object
                                properties:
                                  func:
                                    type: string
                                    enum:
                                      - sum
                                      - min
                                      - max
                                      - median
                                  property:
                                    type: string
                                  calculationBy:
                                    type: string
                                    enum:
                                      - property
                                additionalProperties: false
                                required:
                                  - func
                                  - property
                                  - calculationBy
                              - type: object
                                properties:
                                  func:
                                    enum:
                                      - average
                                  measureTimeBy:
                                    type: string
                                  averageOf:
                                    type: string
                                    enum:
                                      - hour
                                      - day
                                      - week
                                      - month
                                      - total
                                  property:
                                    type: string
                                  calculationBy:
                                    type: string
                                    enum:
                                      - property
                                additionalProperties: false
                                required:
                                  - func
                                  - property
                                  - calculationBy
                                  - averageOf
                      query:
                        $ref: '#/components/schemas/def-0'
                    additionalProperties: false
                    required:
                      - title
                      - target
                      - calculationSpec
                relations:
                  type: object
                  description: The new [relations](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/relate-blueprints/) of the blueprint.<br/>
                  propertyNames:
                    pattern: '^[A-Za-z0-9@_=\\-]+$'
                  additionalProperties:
                    type: object
                    properties:
                      title:
                        type: string
                      target:
                        type: string
                      required:
                        type: boolean
                        default: false
                      many:
                        type: boolean
                        default: false
                      description:
                        type: string
                    additionalProperties: false
                    required:
                      - target
                      - required
                      - many
                changelogDestination:
                  description: The destination of the blueprint's changelog.<br/>
                  oneOf:
                    - type: object
                      title: Webhook
                      description: The changelog will be sent to the specified webhook.<br/>
                      properties:
                        type:
                          type: string
                          enum:
                            - WEBHOOK
                        agent:
                          type: boolean
                          description: If `true`, Port's execution agent will be used to send the changelog.<br/>
                        url:
                          type: string
                          description: The URL of the webhook.<br/>
                          format: uri
                      required:
                        - url
                        - type
                      additionalProperties: false
                    - type: object
                      title: Kafka
                      description: The changelog will be sent to the Kafka topic connected to your Port account.<br/>
                      properties:
                        type:
                          type: string
                          enum:
                            - KAFKA
                      required:
                        - type
                      additionalProperties: false
              additionalProperties: true
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the blueprint you want to patch.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
    delete:
      summary: Delete a blueprint
      description: This route allows you to delete a specific blueprint in your Port account.<br/><br/>To learn more about blueprints, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/).
      tags:
        - Blueprints
      parameters:
        - schema:
            type: boolean
          in: query
          name: delete_actions
          description: If `true`, all self-service actions associated with this blueprint will be deleted as well.<br/>
          required: false
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the blueprint you want to delete.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Deleted successfully.
          # content:
          #   application/json:
          #     schema:
          #       description: Deleted successfully.
          #       type: object
          #       properties:
          #         ok:
          #           enum:
          #             - true
          #       additionalProperties: false
          #       required:
          #         - ok
  '/v1/blueprints/{identifier}/properties/{property_name}/rename':
    patch:
      summary: Rename a property in a blueprint
      description: This route allows you to change the identifier of a property in a specific blueprint in your Port account.<br/><br/>To learn more about blueprints, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/).
      tags:
        - Blueprints
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newPropertyName:
                  type: string
                  description: The new identifier of the property.<br/>
                  pattern: '^[A-Za-z0-9@_=\\-]+$'
              additionalProperties: false
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the blueprint you want to change.<br/>
          required: true
        - schema:
            type: string
          in: path
          name: property_name
          description: The identifier of the property you want to rename.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
  '/v1/blueprints/{identifier}/mirror/{mirror_name}/rename':
    patch:
      summary: Rename a blueprint's mirror property
      description: This route allows you to change the identifier of a mirror property in a specific blueprint in your Port account.<br/><br/>To learn more about blueprints, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/).
      tags:
        - Blueprints
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newMirrorName:
                  type: string
                  description: The new identifier of the mirror property.<br/>
                  pattern: '^[A-Za-z0-9@_=\\-]+$'
              additionalProperties: false
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the blueprint you want to change.<br/>
          required: true
        - schema:
            type: string
          in: path
          name: mirror_name
          description: The identifier of the mirror property you want to rename.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
  '/v1/blueprints/{identifier}/relations/{relation_identifier}/rename':
    patch:
      summary: Rename a blueprint's relation
      description: This route allows you to change the identifier of a relation in a specific blueprint in your Port account.<br/><br/>To learn more about blueprints, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-data-model/setup-blueprint/).
      tags:
        - Blueprints
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newRelationIdentifier:
                  type: string
                  description: The new identifier of the relation.<br/>
                  pattern: '^[A-Za-z0-9@_=\\-]+$'
              additionalProperties: false
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the blueprint you want to change.<br/>
          required: true
        - schema:
            type: string
          in: path
          name: relation_identifier
          description: The identifier of the relation you want to rename.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
  /v1/actions:
    post:
      summary: Create an action
      description: This route allows you to create a new self-service action in your Port account.<br/><br/>To learn more about actions, check out the [documentation](https://docs.getport.io/create-self-service-experiences/).
      tags:
        - Actions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: The identifier of the new action.<br/>
                  pattern: ^[A-Za-z0-9@_.:\\/=-]+$
                title:
                  type: string
                  description: The title of the new action.<br/>
                icon:
                  type: string
                  description: The icon of the new action.<br/>
                description:
                  type: string
                  description: The description of the new action.<br/>
                trigger:
                  oneOf:
                    - type: object
                      description: The trigger definition of the new action.<br/>
                      title: Self-service
                      properties:
                        type:
                          type: string
                          enum:
                            - self-service
                        blueprintIdentifier:
                          type: string
                          description: The identifier of the blueprint that the action is associated with. Note that this is optional, as actions do not have to be tied directly to a blueprint.<br/>
                        operation:
                          type: string
                          description: The [operation type](https://docs.getport.io/create-self-service-experiences/setup-ui-for-action/#basic-details) of the action.<br/>
                          enum:
                            - CREATE
                            - DELETE
                            - DAY-2
                        userInputs:
                          type: object
                          description: The [user inputs](https://docs.getport.io/create-self-service-experiences/setup-ui-for-action/user-inputs/) of the action.<br/>
                          properties:
                            properties:
                              type: object
                              propertyNames:
                                pattern: ^[A-Za-z0-9@_=\\-]+$
                              additionalProperties:
                                type: object
                                properties:
                                  type:
                                    enum:
                                      - string
                                      - number
                                      - boolean
                                      - object
                                      - array
                                  format:
                                    enum:
                                      - date-time
                                      - url
                                      - email
                                      - ipv4
                                      - ipv6
                                      - yaml
                                      - entity
                                      - user
                                      - team
                                      - proto
                                      - markdown
                                  blueprint:
                                    type: string
                                    description: When using the `entity` format, this is the identifier of the blueprint whose entities will be selectable via this input.<br/>
                                  dependsOn:
                                    type: array
                                    description: The identifiers of the inputs that this input depends on. This input will be disabled until they have been given a value.<br/>
                                    items:
                                      type: string
                                  visible:
                                    description: The visibility of the input. Resolves to a boolean value (`true` = visible).<br/>
                                    oneOf:
                                      - type: object
                                        title: jqQuery
                                        properties:
                                          jqQuery:
                                            type: string
                                            description: A [jq query](https://stedolan.github.io/jq/manual/) that resolves to `true` or `false`, determining the visibility of the input.<br/>
                                        required:
                                          - jqQuery
                                        additionalProperties: false
                                      - type: boolean
                                        title: boolean
                                        description: A boolean value determining the visibility of the input.<br/>
                                  icon:
                                    type: string
                                    description: The icon of the input.<br/>
                                  dataset:
                                    type: object
                                    properties:
                                      combinator:
                                        type: string
                                        description: The combinator to use when calculating the rules.<br/>
                                        enum:
                                          - and
                                          - or
                                      rules:
                                        type: array
                                        minItems: 1
                                        items:
                                          anyOf:
                                            - type: object
                                              title: Empty Rule
                                              properties:
                                                operator:
                                                  enum:
                                                    - isEmpty
                                                    - isNotEmpty
                                                property:
                                                  type: string
                                              required:
                                                - operator
                                                - property
                                              additionalProperties: false
                                            - type: object
                                              title: Date Rule
                                              properties:
                                                property:
                                                  type: string
                                                operator:
                                                  enum:
                                                    - between
                                                    - notBetween
                                                    - =
                                                value:
                                                  type: object
                                                  oneOf:
                                                    - type: object
                                                      properties:
                                                        from:
                                                          type: string
                                                          format: date-time
                                                        to:
                                                          type: string
                                                          format: date-time
                                                      required:
                                                        - from
                                                        - to
                                                    - type: object
                                                      properties:
                                                        preset:
                                                          type: string
                                                          enum:
                                                            - today
                                                            - tomorrow
                                                            - yesterday
                                                            - lastWeek
                                                            - last2Weeks
                                                            - lastMonth
                                                            - last3Months
                                                            - last6Months
                                                            - last12Months
                                                      required:
                                                        - preset
                                              required:
                                                - property
                                                - operator
                                                - value
                                              additionalProperties: false
                                            - type: object
                                              title: Number Rule
                                              properties:
                                                property:
                                                  type: string
                                                operator:
                                                  enum:
                                                    - ">"
                                                    - ">="
                                                    - <
                                                    - <=
                                                value:
                                                  oneOf:
                                                    - type:
                                                        - number
                                                    - type: object
                                                      properties:
                                                        jqQuery:
                                                          type: string
                                                      required:
                                                        - jqQuery
                                                      additionalProperties: false
                                              required:
                                                - property
                                                - operator
                                                - value
                                              additionalProperties: false
                                            - type: object
                                              title: String Rule
                                              properties:
                                                property:
                                                  type: string
                                                operator:
                                                  enum:
                                                    - =
                                                    - "!="
                                                    - containsAny
                                                    - contains
                                                    - doesNotContains
                                                    - beginsWith
                                                    - doesNotBeginsWith
                                                    - endsWith
                                                    - doesNotEndsWith
                                                    - in
                                                    - notIn
                                                value:
                                                  anyOf:
                                                    - type: "null"
                                                    - type: string
                                                    - type: number
                                                    - type: boolean
                                                    - type: array
                                                      items:
                                                        type: string
                                                    - type: string
                                                      format: date-time
                                                    - type: object
                                                      properties:
                                                        jqQuery:
                                                          type: string
                                                      required:
                                                        - jqQuery
                                                      additionalProperties: false
                                              additionalProperties: false
                                              required:
                                                - property
                                                - operator
                                                - value
                                            - type: object
                                              title: Relation Rule
                                              properties:
                                                operator:
                                                  enum:
                                                    - relatedTo
                                                blueprint:
                                                  type: string
                                                value:
                                                  anyOf:
                                                    - type: string
                                                    - type: object
                                                      properties:
                                                        jqQuery:
                                                          type: string
                                                      required:
                                                        - jqQuery
                                                      additionalProperties: false
                                                direction:
                                                  enum:
                                                    - upstream
                                                    - downstream
                                                required:
                                                  type: boolean
                                              additionalProperties: false
                                              required:
                                                - operator
                                                - value
                                                - blueprint
                                            - type: object
                                              title: Schema Rule
                                              properties:
                                                propertySchema:
                                                  type: object
                                                  properties:
                                                    type:
                                                      type: string
                                                    format:
                                                      type: string
                                                  required:
                                                    - type
                                                  additionalProperties: false
                                                operator:
                                                  enum:
                                                    - =
                                                    - "!="
                                                value:
                                                  anyOf:
                                                    - type: "null"
                                                    - type: string
                                                    - type: number
                                                    - type: boolean
                                                    - type: object
                                                      properties:
                                                        jqQuery:
                                                          type: string
                                                      required:
                                                        - jqQuery
                                                      additionalProperties: false
                                              required:
                                                - operator
                                                - propertySchema
                                              additionalProperties: false
                                    required:
                                      - combinator
                                      - rules
                                required:
                                  - type
                            required:
                              description: The required inputs' identifier/s. The inputs specified in this array must be given a value when executing the action.<br/>
                              oneOf:
                                - type: object
                                  title: jqQuery
                                  description: A jq query that resolves to an array of the required inputs' identifiers.<br/>
                                  properties:
                                    jqQuery:
                                      type: string
                                  required:
                                    - jqQuery
                                  additionalProperties: false
                                - type: array
                                  title: array
                                  description: An array of the required inputs' identifiers.<br/>
                                  items:
                                    type: string
                            order:
                              type: array
                              description: The order of the inputs. The order of the identifiers in this array will determine the order of the inputs in the UI.<br/>
                              items:
                                type: string
                          additionalProperties: false
                          required:
                            - properties
                      required:
                        - type
                        - operation
                        - userInputs
                      additionalProperties: false
                invocationMethod:
                  description: Details the action's backend type and details.<br/>
                  oneOf:
                    - type: object
                      title: Kafka
                      properties:
                        type:
                          type: string
                          enum:
                            - KAFKA
                        payload:
                          description: An object containing the [action payload](https://docs.getport.io/create-self-service-experiences/setup-backend/#define-the-actions-payload).<br/>
                          type: object
                          # oneOf:
                          #   - type: array
                          #   - type: object
                      required:
                        - type
                      additionalProperties: false
                    - type: object
                      title: Webhook
                      properties:
                        type:
                          type: string
                          enum:
                            - WEBHOOK
                        url:
                          type: string
                          description: The URL of the webhook.<br/>
                        agent:
                          type: boolean
                          description: If `true`, Port's [execution agent](https://docs.getport.io/create-self-service-experiences/setup-backend/webhook/port-execution-agent/) will be used to handle invocations of this action.<br/>
                          # oneOf:
                          #   - type: boolean
                          #   - type: string
                        synchronized:
                          type: boolean
                          description: If `true`, the action will be executed [synchronously](https://docs.getport.io/create-self-service-experiences/setup-backend/webhook/#sync-vs-async-execution).<br/>
                          # oneOf:
                          #   - type: boolean
                          #   - type: string
                        method:
                          type: string
                          description: The HTTP method of the webhook (`POST`, `PUT`, `PATCH`, or `DELETE`).<br/>
                        headers:
                          type: object
                          description: A JSON object containing the headers to be sent to the webhook in each execution, in `"key"`:`"value"` pairs.<br/>
                          # additionalProperties:
                          #   type: string
                        body:
                          type: object
                          description: The body sent to the webhook in each execution. This is where the [action payload](https://docs.getport.io/create-self-service-experiences/setup-backend/#define-the-actions-payload) is specified.<br/>
                          # oneOf:
                          #   - type: array
                          #   - type: object
                      required:
                        - type
                        - url
                      additionalProperties: false
                    - type: object
                      title: GitHub
                      properties:
                        type:
                          type: string
                          enum:
                            - GITHUB
                        org:
                          type: string
                          description: The Github organization in which the workflow is located.<br/>
                        repo:
                          type: string
                          description: The Github repository in which the workflow is located.<br/>
                        workflow:
                          type: string
                          description: The name of the workflow (YAML file) to trigger. The file should be placed under `.github/workflows/`.<br/>
                        workflowInputs:
                          type: object
                          description: The [action payload](https://docs.getport.io/create-self-service-experiences/setup-backend/#define-the-actions-payload) to be sent to Github upon execution.<br/>
                        reportWorkflowStatus:
                          type: boolean
                          description: If `true`, the action run will update its status automatically based on the workflow's result (pass/fail).<br/>
                          # oneOf:
                          #   - type: boolean
                          #   - type: string
                      required:
                        - type
                        - org
                        - repo
                        - workflow
                      additionalProperties: false
                    - type: object
                      title: GitLab
                      properties:
                        type:
                          type: string
                          enum:
                            - GITLAB
                        projectName:
                          type: string
                          description: The GitLab project in which the pipeline is located.<br/>
                        groupName:
                          type: string
                          description: The GitLab group in which the project is located.<br/>
                        defaultRef:
                          type: string
                          description: The default ref (branch/tag name) we want the action to use. Default ref can be overridden dynamically by adding "ref" as a user input. If not set, the agent triggers the `main` branch.
                        pipelineVariables:
                          type: object
                          description: The [action payload](https://docs.getport.io/create-self-service-experiences/setup-backend/#define-the-actions-payload) to be sent to GitLab upon execution.<br/>
                      required:
                        - type
                        - projectName
                        - groupName
                      additionalProperties: false
                    - type: object
                      title: Azure DevOps
                      properties:
                        type:
                          type: string
                          enum:
                            - AZURE_DEVOPS
                        webhook:
                          type: string
                          description: The name of the webhook resource in the Azure YAML pipeline file.<br/>
                        org:
                          type: string
                          description: The Azure DevOps organization in which the pipeline is located.<br/>
                        payload:
                          type: object
                          description: The [action payload](https://docs.getport.io/create-self-service-experiences/setup-backend/#define-the-actions-payload) to be sent to Azure DevOps upon execution.<br/>
                          # oneOf:
                          #   - type: array
                          #   - type: object
                      required:
                        - type
                        - webhook
                        - org
                      additionalProperties: false
                requiredApproval:
                  type: boolean
                  description: If `true`, the action will require approval for each execution.<br/>
                approvalNotification:
                  type: object
                  description: The notification configuration for the approval process. Relevant only if `requiredApproval` is set to `true`.<br/>
                  properties:
                    type:
                      type: string
                      enum:
                        - webhook
                        - email
                      default: email
                  oneOf:
                    - type: object
                      title: Webhook
                      properties:
                        type:
                          type: string
                          enum:
                            - webhook
                        format:
                          type: string
                          enum:
                            - json
                            - slack
                        url:
                          type: string
                          description: The URL of the webhook.<br/>
                          format: uri
                      required:
                        - type
                        - url
                      additionalProperties: false
                    - type: object
                      title: Email
                      properties:
                        type:
                          type: string
                          enum:
                            - email
                      required:
                        - type
                      additionalProperties: false
                  required:
                    - type
                publish:
                  type: boolean
                  description: If `true`, the action will be visible to all users and available for use.<br/>
              additionalProperties: false
              required:
                - identifier
                - trigger
                - invocationMethod
        required: true
      security:
        - bearer:
            - create:actions
      responses:
        "200":
          description: Default Response
    get:
      summary: Get actions
      description: This route allows you to fetch one or more self-service actions in your Port account.<br/><br/>The call will perform a logical `AND` between all query parameters below, and return all actions that match the criteria.<br/><br/>To learn more about actions, check out the [documentation](https://docs.getport.io/create-self-service-experiences/).
      tags:
        - Actions
      parameters:
        - schema:
            type: array
            items:
              type: string
          in: query
          name: action_identifier
          description: The identifier/s of the action/s you want to fetch.<br/>
          required: false
        - schema:
            type: array
            items:
              type: string
          in: query
          name: blueprint_identifier
          description: The identifier/s of the blueprint/s whose actions you wish to fetch.<br/>
          required: false
        - schema:
            type: array
            items:
              type: string
              enum:
                - CREATE
                - DELETE
                - DAY-2
          in: query
          name: operation
          description: The [operation type/s](https://docs.getport.io/create-self-service-experiences/setup-ui-for-action/#basic-details) of the action/s you want to fetch.<br/>
          required: false
        - schema:
            type: boolean
          in: query
          name: published
          description: If `true`, only published actions will be fetched.<br/>
          required: false
        - schema:
            type: string
            enum:
              - self-service
          in: query
          name: trigger_type
          required: false
        - schema:
            type: string
            enum:
              - v1
              - v2
          in: query
          name: version
          required: false
      security:
        - bearer:
            - read:actions
      responses:
        "200":
          description: Default Response
  '/v1/actions/runs/{run_id}':
    patch:
      summary: Patch an action run
      description: This route allows you to patch an action run's details. This can be used to update the run's status & label, and add links to it (e.g. external logs of the job runner).<br/><br/>To learn more about action runs, check out the [documentation](https://docs.getport.io/create-self-service-experiences/reflect-action-progress/).
      tags:
        - Action Runs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - SUCCESS
                    - FAILURE
                statusLabel:
                  type: string
                  description: A label to describe the status of the action run.<br/>
                link:
                  description: One or more links to be displayed in the run's page in Port. For example, a link to the external logs of the job runner.<br/>
                  oneOf:
                    - type: string
                      title: string
                      format: url
                    - type: array
                      title: array
                      items:
                        type: string
                        format: url
                # message:
                #   type: object
                #   deprecated: true
                summary:
                  type: string
                  description: A summary of the action run, which will be displayed in the run's page in Port.<br/>
                externalRunId:
                  type: string
                  description: The run id of your backend, for example the id that GitHub gives the workflow. This can be used to identify the action run instead of the `run_id`.<br/>
              additionalProperties: false
      parameters:
        - schema:
            type: string
            enum:
              - v1
              - v2
          in: query
          name: version
          required: false
        - schema:
            type: string
          in: path
          name: run_id
          description: The identifier of the action run you want to patch.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
    get:
      summary: Get an action run's details
      description: This route allows you to fetch the details of an action run.<br/><br/>To learn more about action runs, check out the [documentation](https://docs.getport.io/create-self-service-experiences/reflect-action-progress/).
      tags:
        - Action Runs
      parameters:
        - schema:
            type: string
            enum:
              - v1
              - v2
          in: query
          name: version
          required: false
        - schema:
            type: string
          in: path
          name: run_id
          description: The identifier of the action run you want to fetch.<br/>
          required: true
      security:
        - bearer:
            - 'read:runs'
      responses:
        '200':
          description: Default Response
  '/v1/actions/runs/{run_id}/approval':
    patch:
      summary: Approve an action's run
      description: This route allows you to approve or decline a request to execute an action that requires approval.<br/><br/>To learn more about manual approval for actions, check out the [documentation](https://docs.getport.io/create-self-service-experiences/set-self-service-actions-rbac/#configure-manual-approval-for-actions).
      tags:
        - Action Runs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - APPROVE
                    - DECLINE
                description:
                  type: string
                  description: A description and/or reason for the given status.<br/>
              additionalProperties: false
              required:
                - status
        required: true
      parameters:
        # - schema:
        #     type: string
        #     enum:
        #       - v1
        #       - v2
        #   in: query
        #   name: version
        #   required: false
        - schema:
            type: string
          in: path
          name: run_id
          description: The identifier of the action run you want to approve/decline.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
  /v1/actions/runs:
    get:
      summary: Get all action runs
      description: This route allows you to fetch all action runs in your Port account. The route will perform a logical `AND` between all query parameters below, and return all action runs that match the criteria.<br/><br/>To learn more about action runs, check out the [documentation](https://docs.getport.io/create-self-service-experiences/reflect-action-progress/).
      tags:
        - Action Runs
      parameters:
        - schema:
            type: string
          in: query
          name: entity
          description: The identifier of the entity associated with the action run.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: blueprint
          description: The identifier of the blueprint associated with the action run.<br/>
          required: false
        - schema:
            type: boolean
          in: query
          name: active
          description: If `true`, only running action runs will be fetched.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: user_email
          description: The email of the user who initiated the action run.<br/>
          required: false
        - schema:
            type: number
            minimum: 1
            maximum: 50
          in: query
          name: limit
          description: The maximum number of action runs to fetch.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: external_run_id
          description: The run id of your backend, for example the id that GitHub gives the workflow. This can be used to identify the action run instead of the `run_id`.<br/>
          required: false
        # - schema:
        #     type: string
        #     enum:
        #       - v1
        #       - v2
        #   in: query
        #   name: version
        #   required: false
      security:
        - bearer:
            - 'read:runs'
      responses:
        '200':
          description: Default Response
  '/v1/actions/runs/{run_id}/logs':
    post:
      summary: Add a log to an action run
      description: This route allows you to send a log message back to Port, which will be displayed in the action run's page. You can also use this route to update the run's termination status (SUCCESS/FAILURE) and label describing the status.<br/><br/>To learn more about action runs, check out the [documentation](https://docs.getport.io/create-self-service-experiences/reflect-action-progress/).  
      tags:
        - Action Runs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                terminationStatus:
                  type: string
                  description: The termination status of the action run. Can be left blank if you only want to send a log message.<br/>
                  enum:
                    - SUCCESS
                    - FAILURE
                statusLabel:
                  type: string
                  description: A label to describe the status of the action run. Can be left blank if you only want to send a log message.<br/>
                message:
                  type: string
                  description: The log message to send back to Port.<br/>
              additionalProperties: false
              required:
                - message
        required: true
      parameters:
        - schema:
            type: string
          in: path
          name: run_id
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
    get:
      summary: Get an action's run logs
      description: This route allows you to fetch the logs from an action run.<br/><br/>To learn more about action runs, check out the [documentation](https://docs.getport.io/create-self-service-experiences/reflect-action-progress/).
      tags:
        - Action Runs
      parameters:
        - schema:
            type: number
            minimum: 1
            maximum: 50
          in: query
          name: limit
          description: The maximum number of logs to fetch.<br/>
          required: false
        - schema:
            type: number
          in: query
          name: offset
          description: The number of logs to skip.<br/>
          required: false
        - schema:
            type: string
          in: path
          name: run_id
          description: The identifier of the action run you want to fetch logs for.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
  /v1/teams:
    get:
      summary: Get all teams in your organization
      description: This route allows you to fetch all of the teams in your Port organization.<br/><br/>To learn more about teams, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Teams
      parameters:
        - schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - createdAt
                - updatedAt
                - provider
                - description
                - users.firstName
                - users.lastName
                - users.email
                - users.picture
                - users.status
          in: query
          name: fields
          description: The fields you want to fetch for each team. If used, only the specified fields will be included in the response.<br/>
          required: false
      security:
        - bearer:
            - 'read:teams'
      responses:
        '200':
          description: Default Response
    post:
      summary: Create a team
      description: This route allows you to create a new team in your Port organization.<br/><br/>To learn more about teams, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the new team.<br/>
                  pattern: '^[^;#/\?\s][^;#/\?]*[^;#/\?\s]$'
                users:
                  type: array
                  description: One or more e-mail addresses of users to add to the new team.<br/>
                  items:
                    type: string
                description:
                  type: string
                  description: The description of the new team.<br/>
              required:
                - name
        required: true
      security:
        - bearer:
            - 'create:teams'
      responses:
        '200':
          description: Default Response
  '/v1/teams/{name}':
    get:
      summary: Get a team
      description: This route allows you to fetch a specific team in your Port organization.<br/><br/>To learn more about teams, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Teams
      parameters:
        - schema:
            type: array
            items:
              enum:
                - id
                - name
                - createdAt
                - updatedAt
                - provider
                - description
                - users.firstName
                - users.lastName
                - users.email
                - users.picture
                - users.status
          in: query
          name: fields
          description: The fields you want to fetch for the team. If used, only the specified fields will be included in the response.<br/>
          required: false
        - schema:
            type: string
          in: path
          name: name
          description: The name of the team you want to fetch.<br/>
          required: true
      security:
        - bearer:
            - 'read:teams'
      responses:
        '200':
          description: Default Response
    patch:
      summary: Patch a team
      description: This route allows you to patch a team's details. This can be used to update the team's name, users, and description.<br/><br/>To learn more about teams, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the team.<br/>
                users:
                  type: array
                  description: One or more e-mail addresses of users to add to the new team. This will override the existing user list.<br/>
                  items:
                    type: string
                description:
                  type:
                    - string
                    # - 'null'
                  description: The new description of the team.<br/>
      parameters:
        - schema:
            type: string
          in: path
          name: name
          description: The name of the team you want to patch.<br/>
          required: true
      security:
        - bearer:
            - 'update:teams'
      responses:
        '200':
          description: Default Response
    put:
      summary: Change a team
      description: This route allows you to change a team's details. This can be used to update the team's name, users, and description.<br/><br/>To learn more about teams, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the team.<br/>
                users:
                  type: array
                  description: One or more e-mail addresses of users to add to the new team. This will override the existing user list.<br/>
                  items:
                    type: string
                description:
                  type: string
                  description: The new description of the team.<br/>
              required:
                - name
        required: true
      parameters:
        - schema:
            type: string
          in: path
          name: name
          description: The name of the team you want to change.<br/>
          required: true
      security:
        - bearer:
            - 'update:teams'
      responses:
        '200':
          description: Default Response
    delete:
      summary: Delete a team
      description: This route allows you to delete a team in your Port organization.<br/><br/>To learn more about teams, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Teams
      parameters:
        - schema:
            type: string
          in: path
          name: name
          description: The name of the team you want to delete.<br/>
          required: true
      security:
        - bearer:
            - 'delete:teams'
      responses:
        '200':
          description: Default Response
  /v1/users:
    get:
      summary: Get all users in your organization
      description: This route allows you to fetch all of the users in your Port organization.<br/><br/>To learn more about users, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Users
      parameters:
        - schema:
            type: array
            items:
              type: string
              enum:
                - id
                - email
                - firstName
                - lastName
                - phoneNumber
                - picture
                - status
                - providers
                - createdAt
                - updatedAt
                - teams.name
                - teams.provider
                - teams.createdAt
                - teams.updatedAt
                - roles.name
                - roles.description
                - roles.isAdmin
                - roles.protected
                - roles.createdAt
                - roles.updatedAt
          in: query
          name: fields
          description: The fields you want to fetch for each user. If used, only the specified fields will be included in the response.<br/>
          required: false
      security:
        - bearer:
            - 'read:users'
      responses:
        '200':
          description: Default Response
  /v1/users/invite:
    post:
      summary: Invite a user to your organization
      description: This route allows you to invite a user to your Port organization.<br/><br/>To learn more about users, roles, and teams, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invitee:
                  type: object
                  description: The details of the user you want to invite.<br/>
                  properties:
                    email:
                      type: string
                      description: The user's email address.<br/>
                      pattern: '^[^;#/\?\s][^;#/\?]*[^;#/\?\s]$'
                    roles:
                      type: array
                      description: The roles you want to assign to the user.<br/>
                      items:
                        type: string
                    teams:
                      type: array
                      description: The names of the teams you want to assign the user to.<br/>
                      items:
                        type: string
                  required:
                    - email
              additionalProperties: false
              required:
                - invitee
        required: true
      parameters:
        - schema:
            type: boolean
            default: true
          in: query
          name: notify
          description: If `true`, the invitee will receive an email notification.<br/>
          required: false
      security:
        - bearer:
            - 'create:users'
      responses:
        '200':
          description: Default Response
  '/v1/users/{user_email}':
    get:
      summary: Get a user
      description: This route allows you to fetch a specific user in your Port organization.<br/><br/>To learn more about users, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Users
      parameters:
        - schema:
            type: string
          in: path
          name: user_email
          description: The email address of the user you want to fetch.<br/>
          required: true
      security:
        - bearer:
            - 'read:users'
      responses:
        '200':
          description: Default Response
    patch:
      summary: Patch a user
      description: This route allows you to patch a user's details. This can be used to update the user's role/s and team/s.<br/><br/>To learn more about users, roles, and teams, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roles:
                  type: array
                  description: The roles you want to assign to the user.<br/>
                  minItems: 1
                  items:
                    type: string
                teams:
                  type: array
                  description: The names of the teams you want to assign the user to.<br/>
                  items:
                    type: string
              additionalProperties: false
      parameters:
        - schema:
            type: string
          in: path
          name: user_email
          description: The email address of the user you want to patch.<br/>
          required: true
      security:
        - bearer:
            - 'update:users'
      responses:
        '200':
          description: Default Response
    delete:
      summary: Delete a user
      description: This route allows you to delete a user in your Port organization.<br/><br/>To learn more about users, check out the [documentation](https://docs.getport.io/sso-rbac/rbac-overview/).
      tags:
        - Users
      parameters:
        - schema:
            type: string
          in: path
          name: user_email
          description: The email address of the user you want to delete.<br/>
          required: true
      security:
        - bearer:
            - 'delete:users'
      responses:
        '200':
          description: Default Response
  /v1/audit-log:
    get:
      summary: Get audit logs
      description: This route allows you to fetch audit logs from your Port account. Your audit logs can also be viewed via [Port's UI](https://app.getport.io/settings/AuditLog).<br/><br/>This route will perform a logical `AND` between all query parameters below, and return all logs that match the criteria.
      tags:
        - Audit
      parameters:
        - schema:
            type: string
          in: query
          name: identifier
          description: An identifier of the log event you want to fetch.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: entity
          description: Fetch all audit logs related to the specified entity.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: blueprint
          description: Fetch all audit logs related to the specified blueprint.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: run_id
          description: Fetch all audit logs related to the specified action run.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: webhookId
          description: Fetch all audit logs related to the specified webhook.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: webhookEventId
          description: Fetch all audit logs related to the specified webhook event.<br/>
          required: false
        - schema:
            type: array
            items:
              type: string
          in: query
          name: origin
          description: Fetch all audit logs coming from the specified origin/s. This refers to the integration/s that triggered the log. For operations performed via Port's UI, the origin will be `UI`.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: InstallationId
          description: Fetch all audit logs related to the specified integration.<br/>
          required: false
        - schema:
            type: array
            items:
              type: string
              enum:
                - blueprint
                - entity
                - run
                - webhook
                - scorecard
                - action
            # anyOf:
            #   - type: array
            #     items:
            #       enum:
            #         - blueprint
            #         - entity
            #         - run
            #         - webhook
            #         - scorecard
            #         - action
            #   - type: string
            #     enum:
            #       - blueprint
            #       - entity
            #       - run
            #       - webhook
            #       - scorecard
            #       - action
          in: query
          name: resources
          description: Fetch all audit logs related to the specified resource type/s.<br/>
          required: false
        - schema:
            type: array
            items:
              enum:
                - action
                - context
                - diff
                - identifier
                - resourceType
                - status
                - trigger
                - additionalData
                - message
          in: query
          name: includes
          description: The fields you want to include in the response. If used, only the specified fields will be included in the response.<br/>
          required: false
        - schema:
            type: string
            format: date-time
          in: query
          name: from
          description: The starting timestamp of the audit logs you want to fetch, in the ISO format `2022-04-23T18:25:43.511Z`.<br/>
          required: false
        - schema:
            type: string
            format: date-time
          in: query
          name: to
          description: The ending timestamp of the audit logs you want to fetch, in the ISO format `2022-04-23T18:25:43.511Z`.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: action
          description: Fetch all audit logs with the specified action type - `CREATE`, `UPDATE`, or `DELETE`.<br/>
          required: false
        - schema:
            type: string
            enum:
              - SUCCESS
              - FAILURE
          in: query
          name: status
          description: Fetch all audit logs with the specified status.<br/>
          required: false
        - schema:
            type: number
          in: query
          name: limit
          description: The maximum number of logs to fetch.<br/>
          required: false
      security:
        - bearer:
            - 'read:audit-log'
      responses:
        '200':
          description: Default Response
  '/v1/blueprints/{blueprint_identifier}/scorecards':
    post:
      summary: Create a scorecard
      description: This route allows you to create a scorecard for a given blueprint. A scorecard is a set of rules that define the quality of a blueprint.<br/><br/>To learn more about scorecards, check out the [documentation](https://docs.getport.io/promote-scorecards/).
      tags:
        - Scorecards
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                  description: A unique identifier for the scorecard.<br/>
                title:
                  type: string
                  description: The title of the scorecard.<br/>
                filter:
                  type: object
                  description: An optional set of [conditions](https://docs.getport.io/promote-scorecards/#conditions) to filter entities that will be evaluated by the scorecard.<br/>
                  properties:
                    combinator:
                      type: string
                      description: The combinator to use when evaluating the conditions.<br/>
                      enum:
                        - and
                        - or
                    conditions:
                      type: array
                      description: The conditions to evaluate.<br/>
                      minItems: 1
                      items:
                        anyOf:
                          - type: object
                            title: Property comparison
                            properties:
                              property:
                                type: string
                              operator:
                                type: string
                                enum:
                                  - =
                                  - '!='
                                  - '>'
                                  - <
                                  - '>='
                                  - <=
                                  - contains
                                  - doesNotContains
                                  - beginsWith
                                  - doesNotBeginsWith
                                  - endsWith
                                  - doesNotEndsWith
                              value:
                                oneOf:
                                  - type: string
                                    title: string
                                  - type: number
                                    title: number
                                  - type: boolean
                                    title: boolean
                            required:
                              - property
                              - operator
                              - value
                          - type: object
                            title: Relation comparison
                            properties:
                              relation:
                                type: string
                              operator:
                                type: string
                                enum:
                                  - =
                                  - '!='
                                  - contains
                                  - doesNotContains
                                  - beginsWith
                                  - doesNotBeginsWith
                                  - endsWith
                                  - doesNotEndsWith
                              value:
                                oneOf:
                                  - type: string
                                    title: string
                                  - type: number
                                    title: number
                                  - type: boolean
                                    title: boolean
                            required:
                              - relation
                              - operator
                              - value
                          - type: object
                            title: Property empty condition
                            properties:
                              not:
                                type: boolean
                              property:
                                type: string
                              operator:
                                type: string
                                enum:
                                  - isEmpty
                                  - isNotEmpty
                            required:
                              - property
                              - operator
                          - type: object
                            title: Relation empty condition
                            properties:
                              not:
                                type: boolean
                              relation:
                                type: string
                              operator:
                                type: string
                                enum:
                                  - isEmpty
                                  - isNotEmpty
                            required:
                              - relation
                              - operator
                  required:
                    - combinator
                    - conditions
                rules:
                  description: The [rules](https://docs.getport.io/promote-scorecards/#rule-elements) that define the scorecard.<br/>
                  type: array
                  items:
                    type: object
                    properties:
                      identifier:
                        type: string
                        pattern: '^[A-Za-z0-9@_=\\-]+$'
                      title:
                        type: string
                      description:
                        type: string
                      level:
                        type: string
                        enum:
                          - Gold
                          - Silver
                          - Bronze
                      query:
                        type: object
                        properties:
                          combinator:
                            type: string
                            enum:
                              - and
                              - or
                          conditions:
                            type: array
                            minItems: 1
                            items:
                              anyOf:
                                - type: object
                                  title: Property comparison
                                  properties:
                                    property:
                                      type: string
                                    operator:
                                      type: string
                                      enum:
                                        - =
                                        - '!='
                                        - '>'
                                        - <
                                        - '>='
                                        - <=
                                        - contains
                                        - doesNotContains
                                        - beginsWith
                                        - doesNotBeginsWith
                                        - endsWith
                                        - doesNotEndsWith
                                    value:
                                      oneOf:
                                        - type: string
                                        - type: number
                                        - type: boolean
                                  required:
                                    - property
                                    - operator
                                    - value
                                - type: object
                                  title: Relation comparison
                                  properties:
                                    relation:
                                      type: string
                                    operator:
                                      type: string
                                      enum:
                                        - =
                                        - '!='
                                        - contains
                                        - doesNotContains
                                        - beginsWith
                                        - doesNotBeginsWith
                                        - endsWith
                                        - doesNotEndsWith
                                    value:
                                      oneOf:
                                        - type: string
                                        - type: number
                                        - type: boolean
                                  required:
                                    - relation
                                    - operator
                                    - value
                                - type: object
                                  title: Property empty condition
                                  properties:
                                    not:
                                      type: boolean
                                    property:
                                      type: string
                                    operator:
                                      type: string
                                      enum:
                                        - isEmpty
                                        - isNotEmpty
                                  required:
                                    - property
                                    - operator
                                - type: object
                                  title: Relation empty condition
                                  properties:
                                    not:
                                      type: boolean
                                    relation:
                                      type: string
                                    operator:
                                      type: string
                                      enum:
                                        - isEmpty
                                        - isNotEmpty
                                  required:
                                    - relation
                                    - operator
                        required:
                          - combinator
                          - conditions
                    required:
                      - identifier
                      - title
                      - level
                      - query
              additionalProperties: false
              required:
                - identifier
                - title
                - rules
        required: true
      parameters:
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          description: The identifier of the blueprint you want to run scorecards for.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
          text/plain; x-api-version=2.0:
            schema:
              type: string
        '400':
          description: Default Response
    put:
      summary: Change scorecards
      description: This route allows you to modify one or more scorecards of a given blueprint. A scorecard is a set of rules that define the quality of a blueprint.<br/><br/>To learn more about scorecards, check out the [documentation](https://docs.getport.io/promote-scorecards/).
      tags:
        - Scorecards
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: An array of the scorecards to update.<br/>
              items:
                type: object
                properties:
                  identifier:
                    type: string
                    description: The identifier of the scorecard.<br/>
                    pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                  title:
                    type: string
                    description: The title of the scorecard.<br/>
                  filter:
                    type: object
                    description: An optional set of [conditions](https://docs.getport.io/promote-scorecards/#conditions) to filter entities that will be evaluated by the scorecard.<br/>
                    properties:
                      combinator:
                        type: string
                        enum:
                          - and
                          - or
                      conditions:
                        type: array
                        minItems: 1
                        items:
                          anyOf:
                            - type: object
                              title: Property comparison
                              properties:
                                property:
                                  type: string
                                operator:
                                  type: string
                                  enum:
                                    - =
                                    - '!='
                                    - '>'
                                    - <
                                    - '>='
                                    - <=
                                    - contains
                                    - doesNotContains
                                    - beginsWith
                                    - doesNotBeginsWith
                                    - endsWith
                                    - doesNotEndsWith
                                value:
                                  oneOf:
                                    - type: string
                                    - type: number
                                    - type: boolean
                              required:
                                - property
                                - operator
                                - value
                            - type: object
                              title: Relation comparison
                              properties:
                                relation:
                                  type: string
                                operator:
                                  type: string
                                  enum:
                                    - =
                                    - '!='
                                    - contains
                                    - doesNotContains
                                    - beginsWith
                                    - doesNotBeginsWith
                                    - endsWith
                                    - doesNotEndsWith
                                value:
                                  oneOf:
                                    - type: string
                                    - type: number
                                    - type: boolean
                              required:
                                - relation
                                - operator
                                - value
                            - type: object
                              title: Property empty condition
                              properties:
                                not:
                                  type: boolean
                                property:
                                  type: string
                                operator:
                                  type: string
                                  enum:
                                    - isEmpty
                                    - isNotEmpty
                              required:
                                - property
                                - operator
                            - type: object
                              title: Relation empty condition
                              properties:
                                not:
                                  type: boolean
                                relation:
                                  type: string
                                operator:
                                  type: string
                                  enum:
                                    - isEmpty
                                    - isNotEmpty
                              required:
                                - relation
                                - operator
                    required:
                      - combinator
                      - conditions
                  rules:
                    type: array
                    description: The [rules](https://docs.getport.io/promote-scorecards/#rule-elements) that define the scorecard.<br/>
                    items:
                      type: object
                      properties:
                        identifier:
                          type: string
                          pattern: '^[A-Za-z0-9@_=\\-]+$'
                        title:
                          type: string
                        description:
                          type: string
                        level:
                          type: string
                          enum:
                            - Gold
                            - Silver
                            - Bronze
                        query:
                          type: object
                          properties:
                            combinator:
                              type: string
                              enum:
                                - and
                                - or
                            conditions:
                              type: array
                              minItems: 1
                              items:
                                anyOf:
                                  - type: object
                                    title: Property comparison
                                    properties:
                                      property:
                                        type: string
                                      operator:
                                        type: string
                                        enum:
                                          - =
                                          - '!='
                                          - '>'
                                          - <
                                          - '>='
                                          - <=
                                          - contains
                                          - doesNotContains
                                          - beginsWith
                                          - doesNotBeginsWith
                                          - endsWith
                                          - doesNotEndsWith
                                      value:
                                        oneOf:
                                          - type: string
                                            title: string
                                          - type: number
                                            title: number
                                          - type: boolean
                                            title: boolean
                                    required:
                                      - property
                                      - operator
                                      - value
                                  - type: object
                                    title: Relation comparison
                                    properties:
                                      relation:
                                        type: string
                                      operator:
                                        type: string
                                        enum:
                                          - =
                                          - '!='
                                          - contains
                                          - doesNotContains
                                          - beginsWith
                                          - doesNotBeginsWith
                                          - endsWith
                                          - doesNotEndsWith
                                      value:
                                        oneOf:
                                          - type: string
                                            title: string
                                          - type: number
                                            title: number
                                          - type: boolean
                                            title: boolean
                                    required:
                                      - relation
                                      - operator
                                      - value
                                  - type: object
                                    title: Property empty condition
                                    properties:
                                      not:
                                        type: boolean
                                      property:
                                        type: string
                                      operator:
                                        type: string
                                        enum:
                                          - isEmpty
                                          - isNotEmpty
                                    required:
                                      - property
                                      - operator
                                  - type: object
                                    title: Relation empty condition
                                    properties:
                                      not:
                                        type: boolean
                                      relation:
                                        type: string
                                      operator:
                                        type: string
                                        enum:
                                          - isEmpty
                                          - isNotEmpty
                                    required:
                                      - relation
                                      - operator
                          required:
                            - combinator
                            - conditions
                      required:
                        - identifier
                        - title
                        - level
                        - query
                  id:
                    type: string
                additionalProperties: false
                required:
                  - identifier
                  - title
                  - rules
      parameters:
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          description: The identifier of the blueprint whose scorecard you want to change.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
    get:
      summary: Get a blueprint's scorecards
      description: This route allows you to fetch all scorecards for a given blueprint. A scorecard is a set of rules that define the quality of a blueprint.<br/><br/>To learn more about scorecards, check out the [documentation](https://docs.getport.io/promote-scorecards/).
      tags:
        - Scorecards
      parameters:
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          description: The identifier of the blueprint whose scorecards you want to fetch.<br/>
          required: true
      security:
        - bearer:
            - 'read:scorecards'
      responses:
        '200':
          description: Default Response
  '/v1/blueprints/{blueprint_identifier}/scorecards/{scorecard_identifier}':
    put:
      summary: Change a scorecard
      description: This route allows you to modify a specific scorecard. A scorecard is a set of rules that define the quality of a blueprint.<br/><br/>To learn more about scorecards, check out the [documentation](https://docs.getport.io/promote-scorecards/).
      tags:
        - Scorecards
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: The new identifier of the scorecard.<br/>
                  pattern: '^[A-Za-z0-9@_.:\\/=-]+$'
                title:
                  type: string
                  description: The new title of the scorecard.<br/>
                filter:
                  type: object
                  description: An optional set of [conditions](https://docs.getport.io/promote-scorecards/#conditions) to filter entities that will be evaluated by the scorecard.<br/>
                  properties:
                    combinator:
                      type: string
                      enum:
                        - and
                        - or
                    conditions:
                      type: array
                      minItems: 1
                      items:
                        anyOf:
                          - type: object
                            properties:
                              property:
                                type: string
                                title: Property comparison
                              operator:
                                type: string
                                enum:
                                  - =
                                  - '!='
                                  - '>'
                                  - <
                                  - '>='
                                  - <=
                                  - contains
                                  - doesNotContains
                                  - beginsWith
                                  - doesNotBeginsWith
                                  - endsWith
                                  - doesNotEndsWith
                              value:
                                oneOf:
                                  - type: string
                                    title: string
                                  - type: number
                                    title: number
                                  - type: boolean
                                    title: boolean
                            required:
                              - property
                              - operator
                              - value
                          - type: object
                            title: Relation comparison
                            properties:
                              relation:
                                type: string
                              operator:
                                type: string
                                enum:
                                  - =
                                  - '!='
                                  - contains
                                  - doesNotContains
                                  - beginsWith
                                  - doesNotBeginsWith
                                  - endsWith
                                  - doesNotEndsWith
                              value:
                                oneOf:
                                  - type: string
                                    title: string
                                  - type: number
                                    title: number
                                  - type: boolean
                                    title: boolean
                            required:
                              - relation
                              - operator
                              - value
                          - type: object
                            title: Property empty condition
                            properties:
                              not:
                                type: boolean
                              property:
                                type: string
                              operator:
                                type: string
                                enum:
                                  - isEmpty
                                  - isNotEmpty
                            required:
                              - property
                              - operator
                          - type: object
                            title: Relation empty condition
                            properties:
                              not:
                                type: boolean
                              relation:
                                type: string
                              operator:
                                type: string
                                enum:
                                  - isEmpty
                                  - isNotEmpty
                            required:
                              - relation
                              - operator
                  required:
                    - combinator
                    - conditions
                rules:
                  description: The [rules](https://docs.getport.io/promote-scorecards/#rule-elements) that define the scorecard.<br/>
                  type: array
                  items:
                    type: object
                    properties:
                      identifier:
                        type: string
                        description: The identifier of the rule.<br/>
                        pattern: '^[A-Za-z0-9@_=\\-]+$'
                      title:
                        type: string
                        description: The title of the rule.<br/>
                      description:
                        type: string
                        description: A description for the rule.<br/>
                      level:
                        type: string
                        description: The [level](https://docs.getport.io/promote-scorecards/#scorecard-total-level-calculation) of the rule.<br/>
                        enum:
                          - Gold
                          - Silver
                          - Bronze
                      query:
                        type: object
                        properties:
                          combinator:
                            type: string
                            enum:
                              - and
                              - or
                          conditions:
                            type: array
                            minItems: 1
                            items:
                              anyOf:
                                - type: object
                                  title: Property comparison
                                  properties:
                                    property:
                                      type: string
                                    operator:
                                      type: string
                                      enum:
                                        - =
                                        - '!='
                                        - '>'
                                        - <
                                        - '>='
                                        - <=
                                        - contains
                                        - doesNotContains
                                        - beginsWith
                                        - doesNotBeginsWith
                                        - endsWith
                                        - doesNotEndsWith
                                    value:
                                      oneOf:
                                        - type: string
                                          title: string
                                        - type: number
                                          title: number
                                        - type: boolean
                                          title: boolean
                                  required:
                                    - property
                                    - operator
                                    - value
                                - type: object
                                  title: Relation comparison
                                  properties:
                                    relation:
                                      type: string
                                    operator:
                                      type: string
                                      enum:
                                        - =
                                        - '!='
                                        - contains
                                        - doesNotContains
                                        - beginsWith
                                        - doesNotBeginsWith
                                        - endsWith
                                        - doesNotEndsWith
                                    value:
                                      oneOf:
                                        - type: string
                                          title: string
                                        - type: number
                                          title: number
                                        - type: boolean
                                          title: boolean
                                  required:
                                    - relation
                                    - operator
                                    - value
                                - type: object
                                  title: Property empty condition
                                  properties:
                                    not:
                                      type: boolean
                                    property:
                                      type: string
                                    operator:
                                      type: string
                                      enum:
                                        - isEmpty
                                        - isNotEmpty
                                  required:
                                    - property
                                    - operator
                                - type: object
                                  title: Relation empty condition
                                  properties:
                                    not:
                                      type: boolean
                                    relation:
                                      type: string
                                    operator:
                                      type: string
                                      enum:
                                        - isEmpty
                                        - isNotEmpty
                                  required:
                                    - relation
                                    - operator
                        required:
                          - combinator
                          - conditions
                    required:
                      - identifier
                      - title
                      - level
                      - query
              additionalProperties: false
              required:
                - identifier
                - title
                - rules
        required: true
      parameters:
        - schema:
            type: string
          in: path
          name: scorecard_identifier
          description: The identifier of the scorecard you want to change.<br/>
          required: true
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          description: The identifier of the blueprint whose scorecard you want to change.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
    get:
      summary: Get a scorecard
      description: This route allows you to fetch a specific scorecard. A scorecard is a set of rules that define the quality of a blueprint.<br/><br/>To learn more about scorecards, check out the [documentation](https://docs.getport.io/promote-scorecards/).
      tags:
        - Scorecards
      parameters:
        - schema:
            type: string
          in: path
          name: scorecard_identifier
          description: The identifier of the scorecard you want to fetch.<br/>
          required: true
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          description: The identifier of the blueprint whose scorecard you want to fetch.<br/>
          required: true
      security:
        - bearer:
            - 'read:scorecards'
      responses:
        '200':
          description: Default Response
    delete:
      summary: Delete a scorecard
      description: This route allows you to delete a specific scorecard. A scorecard is a set of rules that define the quality of a blueprint.<br/><br/>To learn more about scorecards, check out the [documentation](https://docs.getport.io/promote-scorecards/).
      tags:
        - Scorecards
      parameters:
        - schema:
            type: string
          in: path
          name: scorecard_identifier
          description: The identifier of the scorecard you want to delete.<br/>
          required: true
        - schema:
            type: string
          in: path
          name: blueprint_identifier
          description: The identifier of the blueprint whose scorecard you want to delete.<br/>
          required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
  /v1/scorecards:
    get:
      summary: Get all scorecards
      description: This route allows you to fetch all scorecards in your Port organization.<br/><br/>To learn more about scorecards, check out the [documentation](https://docs.getport.io/promote-scorecards/).
      tags:
        - Scorecards
      security:
        - bearer:
            - 'read:scorecards'
      responses:
        '200':
          description: Default Response
  /v1/organization:
    get:
      summary: Get organization details
      description: This route allows you to fetch the details of your Port organization, such as its name, id, and hidden blueprints.
      tags:
        - Organization
      security:
        - bearer: []
      responses:
        "200":
          description: Default Response
    put:
      summary: Update organization details
      description: This route allows you to update the details of your Port organization, such as its name and hidden blueprints.
      tags:
        - Organization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the organization.<br/>
                settings:
                  type: object
                  properties:
                    hiddenBlueprints:
                      description: An array of blueprint identifiers that should be hidden.<br/>
                      type: array
                      items:
                        type: string
              additionalProperties: false
              required:
                - name
        required: true
      security:
        - bearer:
            - update:organization
      responses:
        "200":
          description: Updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    enum:
                      - true
                additionalProperties: false
                required:
                  - ok
                description: Updated successfully.
    patch:
      summary: Patch organization details
      description: This route allows you to patch the details of your Port organization, such as its name and hidden blueprints.
      tags:
        - Organization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the organization.<br/>
                settings:
                  type: object
                  properties:
                    hiddenBlueprints:
                      type: array
                      description: An array of blueprint identifiers that should be hidden.<br/>
                      items:
                        type: string
              additionalProperties: false
              required:
                - name
        required: true
      security:
        - bearer:
            - update:organization
      responses:
        "200":
          description: Updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    enum:
                      - true
                additionalProperties: false
                required:
                  - ok
                description: Updated successfully.
  '/v1/integration/{identifier}/logs':
    get:
      summary: Get an integration's audit logs
      description: This route allows you to fetch the audit logs of a specific integration in your Port organization.<br/><br/>To learn more about integrations, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/).
      tags:
        - Integrations
      parameters:
        - schema:
            type: number
            default: 1
            minimum: 1
            nullable: false
          in: query
          name: page
          description: The number of pages to fetch.<br/>
          required: false
        - schema:
            type: number
            default: 100
            minimum: 0
            maximum: 300
            nullable: false
          in: query
          name: per_page
          description: The number of logs to fetch per page.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: start_date
          description: The start date of the logs, in `ISO format IE 2022-04-23T18:25:43.511Z`.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: end_date
          description: The end date of the logs, in `ISO format IE 2022-04-23T18:25:43.511Z`.<br/>
          required: false
        - schema:
            type: string
          in: path
          name: identifier
          description: The installation id of the integration.<br/>
          required: true
      security:
        - bearer:
            - 'read:integrations'
      responses:
        '200':
          description: Default Response
  '/v1/integration/{identifier}/config':
    patch:
      summary: Patch an integration's config
      description: This route allows you to modify an integration's configuration in your Port organization.<br/><br/>To learn more about integrations, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/).
      tags:
        - Integrations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  description: Various configuration options for the integration.<br/>
                  type: object
                  # type:
                  #   - object
                  #   - 'null'
                  additionalProperties: true
                  properties:
                    deleteDependentEntities:
                      type: boolean
                      default: false
                      description: If `true`, deleting an entity will also delete its dependent entities.<br/>
                    createMissingRelatedEntities:
                      type: boolean
                      default: false
                      description: If `true`, creating an entity with a relation to a non-existing entity will also create the related entity.<br/>
                    resources:
                      type: array
                      description: The mapping definition of resources from the integrated tool/platform into Port. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping).<br/>
                      items:
                        type: object
                        required:
                          - kind
                          - selector
                          - port
                        properties:
                          kind:
                            type: string
                            description: The kind of resource to map, as defined in API of the integrated tool/platorm.<br/>
                          selector:
                            type: object
                            properties:
                              query:
                                type: string
                                description: A `jq` query used to specify which resources to fetch from the integrated tool/platform. If set to `"true"`, all resources of the specified `kind` will be ingested. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#how-does-mapping-work).<br/>
                          port:
                            type: object
                            description: An object containing the mapping definitions of the `kind` resource into Port.<br/>
                            required:
                              - entity
                            properties:
                              entity:
                                type: object
                                required:
                                  - mappings
                                properties:
                                  mappings:
                                    description: The mapping definitions used to map the resource fields into Port entities. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                    oneOf:
                                      - type: array
                                        title: array
                                        items:
                                          type: object
                                          required:
                                            - identifier
                                            - blueprint
                                          properties:
                                            identifier:
                                              type: string
                                              description: A `jq` expression used to get data from the integrated tool's API, to be used as an identifier for the entity.<br/>
                                            title:
                                              type: string
                                              description: A `jq` expression used to get data from the integrated tool's API, to be used as the title of the entity.<br/>
                                            blueprint:
                                              type: string
                                              description: The identifier of the blueprint to map the data into.<br/>
                                            properties:
                                              type: object
                                              description: An object containing the properties of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                              additionalProperties: true
                                            relations:
                                              type: object
                                              description: An object containing the relations of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                              additionalProperties: true
                                      - type: object
                                        title: object
                                        required:
                                          - identifier
                                          - blueprint
                                        properties:
                                          identifier:
                                            type: string
                                            description: A `jq` expression used to get data from the integrated tool's API, to be used as an identifier for the entity.<br/>
                                          title:
                                            type: string
                                            description: A `jq` expression used to get data from the integrated tool's API, to be used as the title of the entity.<br/>
                                          blueprint:
                                            type: string
                                            description: The identifier of the blueprint to map the data into.<br/>
                                          properties:
                                            type: object
                                            description: An object containing the properties of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                            additionalProperties: true
                                          relations:
                                            type: object
                                            description: An object containing the relations of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                            additionalProperties: true
              additionalProperties: false
              required:
                - config
        required: true
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The installation id of the integration.<br/>
          required: true
      security:
        - bearer:
            - 'update:integrations'
      responses:
        '200':
          description: Default Response
  /v1/integration:
    get:
      summary: Get all integrations
      description: This route allows you to fetch all integrations in your Port organization.<br/><br/>To learn more about integrations, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/).
      tags:
        - Integrations
      security:
        - bearer:
            - 'read:integrations'
      responses:
        '200':
          description: Default Response
    post:
      summary: Create an integration
      description: This route allows you to create an integration in your Port organization.<br/><br/>To learn more about integrations, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/).
      tags:
        - Integrations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                installationId:
                  type: string
                  minLength: 1
                  description: A unique identifier which will be used to identify the integration when using the Port API.<br/>
                title:
                  type: string
                  description: The title of the integration. This will be displayed in the [data-sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/>
                version:
                  type: string
                  description: The version of the integration.<br/>
                installationAppType:
                  type: string
                  description: The name of the integrated tool/platform (e.g. `kubernetes`,`pagerduty`).<br/>
                config:
                  type: object
                  # type:
                  #   - object
                  #   - 'null'
                  description: Various configuration options for the integration.<br/>
                  additionalProperties: true
                  properties:
                    deleteDependentEntities:
                      type: boolean
                      description: If `true`, deleting an entity will also delete its dependent entities.<br/>
                    createMissingRelatedEntities:
                      type: boolean
                      description: If `true`, creating an entity with a relation to a non-existing entity will also create the related entity.<br/>
                    resources:
                      type: array
                      description: The mapping definition of resources from the integrated tool/platform into Port. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping).<br/>
                      items:
                        type: object
                        required:
                          - kind
                          - selector
                          - port
                        properties:
                          kind:
                            type: string
                            description: The kind of resource to map, as defined in API of the integrated tool/platorm.<br/>
                          selector:
                            type: object
                            properties:
                              query:
                                description: A `jq` query used to specify which resources to fetch from the integrated tool/platform. If set to `"true"`, all resources of the specified `kind` will be ingested. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#how-does-mapping-work).<br/>
                                type: string
                          port:
                            type: object
                            description: An object containing the mapping definitions of the `kind` resource into Port.<br/>
                            required:
                              - entity
                            properties:
                              entity:
                                type: object
                                required:
                                  - mappings
                                properties:
                                  mappings:
                                    description: The mapping definitions used to map the resource fields into Port entities. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                    oneOf:
                                      - type: array
                                        title: array
                                        items:
                                          type: object
                                          required:
                                            - identifier
                                            - blueprint
                                          properties:
                                            identifier:
                                              type: string
                                              description: A `jq` expression used to get data from the integrated tool's API, to be used as an identifier for the entity.<br/>
                                            title:
                                              type: string
                                              description: A `jq` expression used to get data from the integrated tool's API, to be used as the title of the entity.<br/>
                                            blueprint:
                                              type: string
                                              description: The identifier of the blueprint to map the data into.<br/>
                                            properties:
                                              type: object
                                              description: An object containing the properties of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                              additionalProperties: true
                                            relations:
                                              type: object
                                              description: An object containing the relations of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                              additionalProperties: true
                                      - type: object
                                        title: object
                                        required:
                                          - identifier
                                          - blueprint
                                        properties:
                                          identifier:
                                            type: string
                                            description: A `jq` expression used to get data from the integrated tool's API, to be used as an identifier for the entity.<br/>
                                          title:
                                            type: string
                                            description: A `jq` expression used to get data from the integrated tool's API, to be used as the title of the entity.<br/>
                                          blueprint:
                                            type: string
                                            description: The identifier of the blueprint to map the data into.<br/>
                                          properties:
                                            type: object
                                            description: An object containing the properties of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                            additionalProperties: true
                                          relations:
                                            type: object
                                            description: An object containing the relations of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                            additionalProperties: true
                changelogDestination:
                  type: object
                  description: The destination of the integration's changelog.<br/>
                  properties:
                    type:
                      type: string
                      enum:
                        - WEBHOOK
                        - KAFKA
                  oneOf:
                    # - type: object
                    #   properties: {}
                    #   additionalProperties: false
                    - type: object
                      title: Kafka
                      description: The changelog will be sent to the Kafka topic connected to your Port account.<br/>
                      properties:
                        type:
                          type: string
                          enum:
                            - KAFKA
                      required:
                        - type
                      additionalProperties: false
                    - type: object
                      title: Webhook
                      description: The changelog will be sent to the specified webhook.<br/>
                      properties:
                        type:
                          type: string
                          enum:
                            - WEBHOOK
                        agent:
                          type: boolean
                          description: If `true`, Port's execution agent will be used to send the changelog.<br/>
                        url:
                          type: string
                          description: The URL of the webhook.<br/>
                          format: uri
                      required:
                        - url
                        - type
                      additionalProperties: false
              additionalProperties: false
              required:
                - installationId
        required: true
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: upsert
          description: If `true`, the integration will be updated if it already exists.<br/>
          required: false
      security:
        - bearer:
            - 'create:integrations'
      responses:
        '200':
          description: Default Response
  '/v1/integration/{identifier}':
    get:
      summary: Get an integration
      description: This route allows you to fetch a specific integration in your Port organization.<br/><br/>To learn more about integrations, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/).
      tags:
        - Integrations
      parameters:
        - schema:
            type: string
            default: installationId
            enum:
              - installationId
              - logIngestId
          in: query
          name: byField
          description: The field used to identify the integration. When set to `logIngestId`, the `identifier` parameter should be changed accordingly.<br/>
          required: false
        - schema:
            type: string
          in: path
          name: identifier
          description: The installation id of the integration you want to fetch.<br/>
          required: true
      security:
        - bearer:
            - 'read:integrations'
      responses:
        '200':
          description: Default Response
    patch:
      summary: Patch an integration
      description: This route allows you to modify an integration in your Port organization.<br/><br/>To learn more about integrations, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/).
      tags:
        - Integrations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The new title of the integration. This will be displayed in the [data-sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/>
                version:
                  type: string
                  description: The new version of the integration.<br/>
                installationAppType:
                  type: string
                  description: The new name of the integrated tool/platform (e.g. `kubernetes`,`pagerduty`).<br/>
                config:
                  type: object
                  # type:
                  #   - object
                  #   - 'null'
                  description: Various configuration options for the integration.<br/>
                  additionalProperties: true
                  properties:
                    deleteDependentEntities:
                      type: boolean
                      description: If `true`, deleting an entity will also delete its dependent entities.<br/>
                    createMissingRelatedEntities:
                      type: boolean
                      description: If `true`, creating an entity with a relation to a non-existing entity will also create the related entity.<br/>
                    resources:
                      type: array
                      description: The mapping definition of resources from the integrated tool/platform into Port. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping).<br/>
                      items:
                        type: object
                        required:
                          - kind
                          - selector
                          - port
                        properties:
                          kind:
                            type: string
                            description: The kind of resource to map, as defined in API of the integrated tool/platorm.<br/>
                          selector:
                            type: object
                            properties:
                              query:
                                type: string
                                description: A `jq` query used to specify which resources to fetch from the integrated tool/platform. If set to `"true"`, all resources of the specified `kind` will be ingested. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#how-does-mapping-work).<br/>
                          port:
                            type: object
                            description: An object containing the mapping definitions of the `kind` resource into Port.<br/>
                            required:
                              - entity
                            properties:
                              entity:
                                type: object
                                required:
                                  - mappings
                                properties:
                                  mappings:
                                    description: The mapping definitions used to map the resource fields into Port entities. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                    oneOf:
                                      - type: array
                                        title: array
                                        items:
                                          type: object
                                          required:
                                            - identifier
                                            - blueprint
                                          properties:
                                            identifier:
                                              type: string
                                              description: A `jq` expression used to get data from the integrated tool's API, to be used as an identifier for the entity.<br/>
                                            title:
                                              type: string
                                              description: A `jq` expression used to get data from the integrated tool's API, to be used as the title of the entity.<br/>
                                            blueprint:
                                              type: string
                                              description: The identifier of the blueprint to map the data into.<br/>
                                            properties:
                                              type: object
                                              description: An object containing the properties of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                              additionalProperties: true
                                            relations:
                                              type: object
                                              description: An object containing the relations of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                              additionalProperties: true
                                      - type: object
                                        title: object
                                        required:
                                          - identifier
                                          - blueprint
                                        properties:
                                          identifier:
                                            type: string
                                            description: A `jq` expression used to get data from the integrated tool's API, to be used as an identifier for the entity.<br/>
                                          title:
                                            type: string
                                            description: A `jq` expression used to get data from the integrated tool's API, to be used as the title of the entity.<br/>
                                          blueprint:
                                            type: string
                                            description: The identifier of the blueprint to map the data into.<br/>
                                          properties:
                                            type: object
                                            description: An object containing the properties of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                            additionalProperties: true
                                          relations:
                                            type: object
                                            description: An object containing the relations of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping#configuration-structure).<br/>
                                            additionalProperties: true
                changelogDestination:
                  type: object
                  description: The destination of the integration's changelog.<br/>
                  properties:
                    type:
                      type: string
                      enum:
                        - WEBHOOK
                        - KAFKA
                  oneOf:
                    # - type: object
                    #   properties: {}
                    #   additionalProperties: false
                    - type: object
                      title: Kafka
                      description: The changelog will be sent to the Kafka topic connected to your Port account.<br/>
                      properties:
                        type:
                          type: string
                          enum:
                            - KAFKA
                      required:
                        - type
                      additionalProperties: false
                    - type: object
                      title: Webhook
                      description: The changelog will be sent to the specified webhook.<br/>
                      properties:
                        type:
                          type: string
                          enum:
                            - WEBHOOK
                        agent:
                          type: boolean
                          description: If `true`, Port's execution agent will be used to send the changelog.<br/>
                        url:
                          type: string
                          description: The URL of the webhook.<br/>
                          format: uri
                      required:
                        - url
                        - type
                      additionalProperties: false
              additionalProperties: true
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The installation id of the integration you want to modify.<br/>
          required: true
      security:
        - bearer:
            - 'update:integrations'
      responses:
        '200':
          description: Default Response
    delete:
      summary: Delete an integration
      description: This route allows you to delete an integration in your Port organization.<br/><br/>To learn more about integrations, check out the [documentation](https://docs.getport.io/build-your-software-catalog/sync-data-to-catalog/).
      tags:
        - Integrations
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The installation id of the integration you want to delete.<br/>
          required: true
      security:
        - bearer:
            - 'delete:integrations'
      responses:
        '200':
          description: Default Response
  /v1/webhooks:
    post:
      summary: Create a webhook
      description: This route allows you to create a webhook in your Port organization. Webhooks provide a way to ingest data from an external tool/platform into Port. You can also create a webhook via the [data sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/><br/>To learn more about webhooks, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).
      tags:
        - Webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: A unique identifier for the webhook.<br/>
                  maxLength: 30
                title:
                  type: string
                  description: The title of the webhook, which will be displayed in the [data sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/>
                  maxLength: 30
                description:
                  type: string
                  description: A description for the webhook.<br/>
                  maxLength: 200
                icon:
                  type: string
                  description: The icon of the webhook.<br/>
                mappings:
                  description: The mapping definitions used to map the data from the webhook into Port entities. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).<br/>
                  type: array
                  items:
                    type: object
                    properties:
                      blueprint:
                        type: string
                        description: The identifier of the blueprint to map the data into.<br/>
                      filter:
                        type: string
                        description: A `jq` query used to filter exactly which payloads sent to the webhook are processed. If set to `"true"`, all payloads will be processed.<br/>
                      itemsToParse:
                        type: string
                        description: A `jq` query that evaluates to an array of items, used to create multiple entities from a single webhook event.<br/>
                      entity:
                        description: An object defining how to map the data from the webhook payload into Port entities.<br/>
                        type: object
                        properties:
                          identifier:
                            type: string
                            description: A `jq` expression used to get data from the webhook payload, to be used as an identifier for the entity.<br/>
                          title:
                            type: string
                            description: A `jq` expression used to get data from the webhook payload, to be used as the title of the entity.<br/>
                          icon:
                            type: string
                            description: The icon of the entity.<br/>
                          team:
                            type: string
                            description: The team the entity belongs to.<br/>
                          properties:
                            type: object
                            description: An object containing the properties of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).<br/>
                            propertyNames:
                              type: string
                          relations:
                            type: object
                            description: An object containing the relations of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).<br/>
                            propertyNames:
                              type: string
                        additionalProperties: false
                        required:
                          - identifier
                    additionalProperties: false
                    required:
                      - blueprint
                      - entity
                enabled:
                  type: boolean
                  description: Determines whether the webhook is active or not. If `false`, any incoming events will be dropped.<br/>
                  default: true
                security:
                  type: object
                  description: The security configuration of the webhook, used to tell Port how to verify the hashed signature sent with incoming requests.<br/>For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/#security-configuration).<br/>
                  properties:
                    secret:
                      type: string
                    signatureHeaderName:
                      type: string
                    signatureAlgorithm:
                      type: string
                      enum:
                        - sha1
                        - sha256
                        - plain
                    signaturePrefix:
                      type: string
                    requestIdentifierPath:
                      type: string
                  additionalProperties: false
                integrationType:
                  type: string
                  enum:
                    - custom
                    # - template
              additionalProperties: false
              required:
                - title
                - enabled
        required: true
      security:
        - bearer:
            - 'create:integrations'
      responses:
        '200':
          description: Default Response
    get:
      summary: Get all webhooks
      description: This route allows you to fetch all webhooks configured in your Port organization. You can also see them in the [data sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/><br/>To learn more about webhooks, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).
      tags:
        - Webhook
      security:
        - bearer:
            - 'read:integrations'
      responses:
        '200':
          description: Default Response
  '/v1/webhooks/{identifier}':
    patch:
      summary: Patch a webhook
      description: This route allows you to modify a webhook in your Port organization. You can also modify it via the [data sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/><br/>To learn more about webhooks, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).
      tags:
        - Webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: The new identifier of the webhook.<br/>
                  maxLength: 30
                title:
                  type: string
                  description: The new title of the webhook, which will be displayed in the [data sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/>
                  maxLength: 30
                description:
                  type: string
                  description: A new description for the webhook.<br/>
                  maxLength: 200
                icon:
                  type: string
                  description: The new icon of the webhook.<br/>
                mappings:
                  type: array
                  description: The mapping definitions used to map the data from the webhook into Port entities. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).<br/>
                  items:
                    type: object
                    properties:
                      blueprint:
                        type: string
                        description: The identifier of the blueprint to map the data into.<br/>
                      filter:
                        type: string
                        description: A `jq` query used to filter exactly which payloads sent to the webhook are processed. If set to `"true"`, all payloads will be processed.<br/>
                      itemsToParse:
                        type: string
                        description: A `jq` query that evaluates to an array of items, used to create multiple entities from a single webhook event.<br/>
                      entity:
                        type: object
                        description: An object defining how to map the data from the webhook payload into Port entities.<br/>
                        properties:
                          identifier:
                            type: string
                            description: A `jq` expression used to get data from the webhook payload, to be used as an identifier for the entity.<br/>
                          title:
                            type: string
                            description: A `jq` expression used to get data from the webhook payload, to be used as the title of the entity.<br/>
                          icon:
                            type: string
                            description: The icon of the entity.<br/>
                          team:
                            type: string
                            description: The team the entity belongs to.<br/>
                          properties:
                            type: object
                            description: An object containing the properties of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).<br/>
                            propertyNames:
                              type: string
                          relations:
                            type: object
                            description: An object containing the relations of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).<br/>
                            propertyNames:
                              type: string
                        additionalProperties: false
                        required:
                          - identifier
                    additionalProperties: false
                    required:
                      - blueprint
                      - entity
                enabled:
                  type: boolean
                  description: Determines whether the webhook is active or not. If `false`, any incoming events will be dropped.<br/>
                  default: true
                security:
                  type: object
                  description: The security configuration of the webhook, used to tell Port how to verify the hashed signature sent with incoming requests.<br/>For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/#security-configuration).<br/>
                  properties:
                    secret:
                      type: string
                    signatureHeaderName:
                      type: string
                    signatureAlgorithm:
                      type: string
                      enum:
                        - sha1
                        - sha256
                        - plain
                    signaturePrefix:
                      type: string
                    requestIdentifierPath:
                      type: string
                  additionalProperties: false
                integrationType:
                  type: string
                  enum:
                    - custom
                    # - template
              additionalProperties: false
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the webhook you want to modify.<br/>
          required: true
      security:
        - bearer:
            - 'update:integrations'
      responses:
        '200':
          description: Default Response
    put:
      summary: Change a webhook
      description: This route allows you to modify a webhook in your Port organization. You can also modify it via the [data sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/><br/>To learn more about webhooks, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).
      tags:
        - Webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  description: The new identifier of the webhook.<br/>
                  maxLength: 30
                title:
                  type: string
                  description: The new title of the webhook, which will be displayed in the [data sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/>
                  maxLength: 30
                description:
                  type: string
                  description: A new description for the webhook.<br/>
                  maxLength: 200
                icon:
                  type: string
                  description: The new icon of the webhook.<br/>
                mappings:
                  type: array
                  description: The mapping definitions used to map the data from the webhook into Port entities. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).<br/>
                  items:
                    type: object
                    properties:
                      blueprint:
                        type: string
                        description: The identifier of the blueprint to map the data into.<br/>
                      filter:
                        type: string
                        description: A `jq` query used to filter exactly which payloads sent to the webhook are processed. If set to `"true"`, all payloads will be processed.<br/>
                      itemsToParse:
                        type: string
                        description: A `jq` query that evaluates to an array of items, used to create multiple entities from a single webhook event.<br/>
                      entity:
                        type: object
                        description: An object defining how to map the data from the webhook payload into Port entities.<br/>
                        properties:
                          identifier:
                            type: string
                            description: A `jq` expression used to get data from the webhook payload, to be used as an identifier for the entity.<br/>
                          title:
                            type: string
                            description: A `jq` expression used to get data from the webhook payload, to be used as the title of the entity.<br/>
                          icon:
                            type: string
                            description: The icon of the entity.<br/>
                          team:
                            type: string
                            description: The team the entity belongs to.<br/>
                          properties:
                            type: object
                            description: An object containing the properties of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).<br/>
                            propertyNames:
                              type: string
                          relations:
                            type: object
                            description: An object containing the relations of the entity and their values. For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).<br/>
                            propertyNames:
                              type: string
                        additionalProperties: false
                        required:
                          - identifier
                    additionalProperties: false
                    required:
                      - blueprint
                      - entity
                enabled:
                  type: boolean
                  description: Determines whether the webhook is active or not. If `false`, any incoming events will be dropped.<br/>
                  default: true
                security:
                  type: object
                  description: The security configuration of the webhook, used to tell Port how to verify the hashed signature sent with incoming requests.<br/>For more information and examples, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/#security-configuration).<br/>
                  properties:
                    secret:
                      type: string
                    signatureHeaderName:
                      type: string
                    signatureAlgorithm:
                      type: string
                      enum:
                        - sha1
                        - sha256
                        - plain
                    signaturePrefix:
                      type: string
                    requestIdentifierPath:
                      type: string
                  additionalProperties: false
                integrationType:
                  type: string
                  enum:
                    - custom
                    # - template
              additionalProperties: false
              required:
                - title
                - enabled
        required: true
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the webhook you want to modify.<br/>
          required: true
      security:
        - bearer:
            - 'update:integrations'
      responses:
        '200':
          description: Default Response
    get:
      summary: Get a webhook
      description: This route allows you to fetch a specific webhook in your Port organization. You can also see it in the [data sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/><br/>To learn more about webhooks, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).
      tags:
        - Webhook
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the webhook you want to fetch.<br/>
          required: true
      security:
        - bearer:
            - 'read:integrations'
      responses:
        '200':
          description: Default Response
    delete:
      summary: Delete a webhook
      description: This route allows you to delete a webhook in your Port organization. You can also delete it via the [data sources page](https://app.getport.io/settings/data-sources) of your Port account.<br/><br/>To learn more about webhooks, check out the [documentation](https://docs.getport.io/build-your-software-catalog/custom-integration/webhook/).
      tags:
        - Webhook
      parameters:
        - schema:
            type: string
          in: path
          name: identifier
          description: The identifier of the webhook you want to delete.<br/>
          required: true
      security:
        - bearer:
            - 'delete:integrations'
      responses:
        '200':
          description: Default Response
  /v1/migrations:
    get:
      summary: Get all migrations
      description: This route allows you to fetch all migrations (both past and present) in your Port organization.<br/><br/>The call will perform a logical `AND` operation on the query parameters below, and return all migrations that match the criteria.
      tags:
        - Migrations
      parameters:
        - schema:
            type: array
            items:
              type: string
              enum:
                - COMPLETED
                - RUNNING
                - PENDING
                - INITIALIZING
                - FAILURE
                - CANCELLED
                - PENDING_CANCELLATION
          in: query
          name: status
          required: false
        - schema:
            type: string
          in: query
          name: actor
          description: The identifier of the user who initiated the migration. You can use the [Get user](/api-reference/get-a-user) route to get a user's identifier.<br/>
          required: false
        - schema:
            type: string
          in: query
          name: blueprint
          description: The identifier of the blueprint associated with the migration.<br/>
          required: false
      security:
        - bearer:
            - 'read:blueprints'
      responses:
        '200':
          description: Default Response
    post:
      summary: Create a migration
      description: This route allows you to create a migration in your Port organization.<br/><br/>You can use this to migrate data from one blueprint to another, or to convert the data type of a property in a blueprint.
      tags:
        - Migrations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceBlueprint:
                  type: string
                  description: The identifier of the blueprint from which the migration will be performed.<br/>
                mapping:
                  type: object
                  description: The definition used to map the data from the source blueprint into the target blueprint.
                  properties:
                    blueprint:
                      type: string
                      description: The identifier of the target blueprint.<br/>
                    filter:
                      type: string
                      description: An optional set of [conditions](https://docs.getport.io/promote-scorecards/#conditions) to filter the entities that will be migrated.<br/>
                    itemsToParse:
                      type: string
                      description: A `jq` query that evaluates to an array of items, used to create multiple entities at once. See more information [here](https://docs.getport.io/build-your-software-catalog/customize-integrations/configure-mapping/#create-multiple-entities-from-an-array-api-object).<br/>
                    entity:
                      type: object
                      properties:
                        identifier:
                          type: string
                          description: A `jq` expression used to get data from the source blueprint, to be used as an identifier for the entity.<br/>
                        title:
                          type: string
                          description: A `jq` expression used to get data from the source blueprint, to be used as the title of the entity.<br/>
                        icon:
                          type: string
                          description: The icon of the entity.<br/>
                        team:
                          type: string
                          description: The team the entity belongs to.<br/>
                        properties:
                          type: object
                          description: An object containing the properties of the entity and their values, in `"key":"value"` pairs where the `key` is the property's identifier, and the `value` is its value.<br/>
                          additionalProperties:
                            type: string
                        relations:
                          type: object
                          description: An object containing the relations of the entity and their values, in `"key":"value"` pairs where the `key` is the relation's identifier, and the `value` is the related entity's identifier.<br/>
                          additionalProperties:
                            type: string
                  required:
                    - entity
              required:
                - sourceBlueprint
                - mapping
              additionalProperties: false
        required: true
      security:
        - bearer: []
      responses:
        '200':
          description: Default Response
